

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 11 17:27:19 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  0008                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0088                     	;# 
   218  0089                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238                           
   239                           	psect	idataCOMMON
   240  0642                     __pidataCOMMON:
   241                           
   242                           ;initializer for _CGRAM1
   243  0642  340A               	retlw	10
   244  0643  340A               	retlw	10
   245  0644  340A               	retlw	10
   246  0645  340A               	retlw	10
   247  0646  3400               	retlw	0
   248  0647  3411               	retlw	17
   249  0648  340E               	retlw	14
   250  0649  3400               	retlw	0
   251  0006                     _PORTB	set	6
   252  0006                     _PORTBbits	set	6
   253  0086                     _TRISB	set	134
   254  0086                     _TRISBbits	set	134
   255                           
   256                           	psect	strings
   257  0003                     __pstrings:
   258  0003                     stringtab:
   259  0003                     __stringtab:
   260  0003                     stringcode:	
   261                           ;	String table - string pointers are 1 byte each
   262                           
   263  0003                     stringdir:
   264  0003  3000               	movlw	high stringdir
   265  0004  008A               	movwf	10
   266  0005  0804               	movf	4,w
   267  0006  0A84               	incf	4,f
   268  0007  0782               	addwf	2,f
   269  0008                     __stringbase:
   270  0008  3400               	retlw	0
   271  0009                     __end_of__stringtab:
   272  0009                     STR_1:
   273  0009  3450               	retlw	80	;'P'
   274  000A  3472               	retlw	114	;'r'
   275  000B  3475               	retlw	117	;'u'
   276  000C  3465               	retlw	101	;'e'
   277  000D  3462               	retlw	98	;'b'
   278  000E  3461               	retlw	97	;'a'
   279  000F  3420               	retlw	32	;' '
   280  0010  3433               	retlw	51	;'3'
   281  0011  3400               	retlw	0
   282                           
   283                           	psect	cinit
   284  07CB                     start_initialization:	
   285                           ; #config settings
   286                           
   287  07CB                     __initialization:
   288                           
   289                           ; Initialize objects allocated to COMMON
   290  07CB  120A  118A  2642  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   291  07D0  00F0               	movwf	__pdataCOMMON& (0+127)
   292  07D1  120A  118A  2643  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   293  07D6  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   294  07D7  120A  118A  2644  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   295  07DC  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   296  07DD  120A  118A  2645  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   297  07E2  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   298  07E3  120A  118A  2646  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   299  07E8  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   300  07E9  120A  118A  2647  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   301  07EE  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   302  07EF  120A  118A  2648  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   303  07F4  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   304  07F5  120A  118A  2649  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   305  07FA  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   306                           
   307                           ; Clear objects allocated to COMMON
   308  07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   309  07FC                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  07FC                     __end_of__initialization:
   313  07FC  0183               	clrf	3
   314  07FD  120A  118A  2EA3   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317  007D                     __pbssCOMMON:
   318  007D                     _direccion_DDRAM:
   319  007D                     	ds	1
   320                           
   321                           	psect	dataCOMMON
   322  0070                     __pdataCOMMON:
   323  0070                     _CGRAM1:
   324  0070                     	ds	8
   325                           
   326                           	psect	inittext
   327  064A                     init_fetch0:	
   328                           ;	Called with low address in FSR and high address in W
   329                           
   330  064A  087E               	movf	btemp,w
   331  064B  008A               	movwf	10
   332  064C  087F               	movf	btemp+1,w
   333  064D  0082               	movwf	2
   334  064E                     init_ram0:	
   335                           ;Called with:
   336                           ;	high address of idata address in btemp 
   337                           ;	low address of idata address in btemp+1 
   338                           ;	low address of data in FSR
   339                           ;	high address + 1 of data in btemp-1
   340                           
   341  064E  120A  118A  264A  120A  118A  	fcall	init_fetch0
   342  0653  0080               	movwf	0
   343  0654  0A84               	incf	4,f
   344  0655  0804               	movf	4,w
   345  0656  067D               	xorwf	btemp+-1,w
   346  0657  1903               	btfsc	3,2
   347  0658  3400               	retlw	0
   348  0659  0AFF               	incf	btemp+1,f
   349  065A  1903               	btfsc	3,2
   350  065B  0AFE               	incf	btemp,f
   351  065C  2E4E               	goto	init_ram0
   352                           
   353                           	psect	cstackCOMMON
   354  0078                     __pcstackCOMMON:
   355  0078                     ?_LCD_delay:
   356  0078                     ??_LCD_delay:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0078                     ?_LCD_Init:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0078                     ??_LCD_Init:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0078                     ?_escribir_comando:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0078                     ??_escribir_comando:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0078                     ?_escribir_caracter:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0078                     ??_escribir_caracter:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0078                     ?_escribir_cadena:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0078                     ?_escribir_caracter_especial:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0078                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0078                     ?_leer_direccion_DDRAM:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0078                     ??_leer_direccion_DDRAM:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           ; 1 bytes @ 0x0
   394  0078                     	ds	1
   395  0079                     escribir_comando@comando:
   396  0079                     escribir_caracter@caracter:	
   397                           ; 1 bytes @ 0x1
   398                           
   399                           
   400                           ; 1 bytes @ 0x1
   401  0079                     	ds	1
   402  007A                     ??_escribir_cadena:
   403  007A                     ??_escribir_caracter_especial:	
   404                           ; 1 bytes @ 0x2
   405                           
   406                           
   407                           ; 1 bytes @ 0x2
   408  007A                     	ds	1
   409  007B                     escribir_cadena@cadena:
   410  007B                     escribir_caracter_especial@DirCGRAM:	
   411                           ; 1 bytes @ 0x3
   412                           
   413                           
   414                           ; 1 bytes @ 0x3
   415  007B                     	ds	1
   416  007C                     escribir_cadena@i:
   417  007C                     escribir_caracter_especial@i:	
   418                           ; 1 bytes @ 0x4
   419                           
   420                           
   421                           ; 1 bytes @ 0x4
   422  007C                     	ds	1
   423  007D                     ??_main:
   424                           
   425                           	psect	maintext
   426  06A3                     __pmaintext:	
   427                           ; 1 bytes @ 0x5
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 5 in file "MAIN.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels required when called: 3
   453 ;; This function calls:
   454 ;;		_LCD_Init
   455 ;;		_LCD_delay
   456 ;;		_escribir_cadena
   457 ;;		_escribir_caracter
   458 ;;		_escribir_caracter_especial
   459 ;;		_escribir_comando
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465  06A3                     _main:	
   466                           ;psect for function _main
   467                           
   468  06A3                     l814:	
   469                           ;incstack = 0
   470                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   471                           
   472                           
   473                           ;MAIN.c: 7:     LCD_delay();
   474  06A3  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   475  06A8                     l816:
   476                           
   477                           ;MAIN.c: 8:     LCD_Init();
   478  06A8  120A  118A  267F  120A  118A  	fcall	_LCD_Init
   479  06AD                     l818:
   480                           
   481                           ;MAIN.c: 10:     escribir_comando(0b00001111);
   482  06AD  300F               	movlw	15
   483  06AE  120A  118A  26FE  120A  118A  	fcall	_escribir_comando
   484  06B3                     l820:
   485                           
   486                           ;MAIN.c: 11:     escribir_caracter('3');
   487  06B3  3033               	movlw	51
   488  06B4  120A  118A  2785  120A  118A  	fcall	_escribir_caracter
   489  06B9                     l822:
   490                           
   491                           ;MAIN.c: 12:     escribir_cadena("Prueba 3");
   492  06B9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   493  06BA  120A  118A  265D  120A  118A  	fcall	_escribir_cadena
   494  06BF                     l824:
   495                           
   496                           ;MAIN.c: 13:     escribir_caracter_especial(0b00000000);
   497  06BF  3000               	movlw	0
   498  06C0  120A  118A  26CF  120A  118A  	fcall	_escribir_caracter_especial
   499  06C5                     l826:
   500                           
   501                           ;MAIN.c: 14:     escribir_caracter(0);
   502  06C5  3000               	movlw	0
   503  06C6  120A  118A  2785  120A  118A  	fcall	_escribir_caracter
   504  06CB                     l21:	
   505                           ;MAIN.c: 16:     while(1);
   506                           
   507  06CB                     l22:
   508  06CB  2ECB               	goto	l21
   509  06CC  120A  118A  2800   	ljmp	start
   510  06CF                     __end_of_main:
   511                           
   512                           	psect	text1
   513  06CF                     __ptext1:	
   514 ;; *************** function _escribir_caracter_especial *****************
   515 ;; Defined at:
   516 ;;		line 52 in file "LCD16x2.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  DirCGRAM        1    wreg     PTR unsigned char 
   519 ;;		 -> NULL(0), 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  DirCGRAM        1    3[COMMON] PTR unsigned char 
   522 ;;		 -> NULL(0), 
   523 ;;  i               1    4[COMMON] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         2       0       0       0       0
   535 ;;      Temps:          1       0       0       0       0
   536 ;;      Totals:         3       0       0       0       0
   537 ;;Total ram usage:        3 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; Hardware stack levels required when called: 2
   540 ;; This function calls:
   541 ;;		_escribir_caracter
   542 ;;		_escribir_comando
   543 ;;		_leer_direccion_DDRAM
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549  06CF                     _escribir_caracter_especial:	
   550                           ;psect for function _escribir_caracter_especial
   551                           
   552                           
   553                           ;incstack = 0
   554                           ; Regs used in _escribir_caracter_especial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   555                           ;escribir_caracter_especial@DirCGRAM stored from wreg
   556  06CF  00FB               	movwf	escribir_caracter_especial@DirCGRAM
   557  06D0                     l774:
   558                           
   559                           ;LCD16x2.c: 53:     direccion_DDRAM = leer_direccion_DDRAM();
   560  06D0  120A  118A  2740  120A  118A  	fcall	_leer_direccion_DDRAM
   561  06D5  00FA               	movwf	??_escribir_caracter_especial
   562  06D6  087A               	movf	??_escribir_caracter_especial,w
   563  06D7  00FD               	movwf	_direccion_DDRAM
   564  06D8                     l776:
   565                           
   566                           ;LCD16x2.c: 54:     escribir_comando(0b01000000|*DirCGRAM);
   567  06D8  087B               	movf	escribir_caracter_especial@DirCGRAM,w
   568  06D9  0084               	movwf	4
   569  06DA  1383               	bcf	3,7	;select IRP bank0
   570  06DB  0800               	movf	0,w
   571  06DC  3840               	iorlw	64
   572  06DD  120A  118A  26FE  120A  118A  	fcall	_escribir_comando
   573  06E2                     l778:
   574                           
   575                           ;LCD16x2.c: 55:     for(char i = 0; i<8;i++){
   576  06E2  01FC               	clrf	escribir_caracter_especial@i
   577  06E3                     l784:
   578                           
   579                           ;LCD16x2.c: 56:  escribir_caracter(CGRAM1[i]);
   580  06E3  087C               	movf	escribir_caracter_especial@i,w
   581  06E4  3E70               	addlw	(low (_CGRAM1| 0))& (0+255)
   582  06E5  0084               	movwf	4
   583  06E6  0800               	movf	0,w
   584  06E7  120A  118A  2785  120A  118A  	fcall	_escribir_caracter
   585  06EC                     l786:
   586                           
   587                           ;LCD16x2.c: 57:     }
   588  06EC  3001               	movlw	1
   589  06ED  00FA               	movwf	??_escribir_caracter_especial
   590  06EE  087A               	movf	??_escribir_caracter_especial,w
   591  06EF  07FC               	addwf	escribir_caracter_especial@i,f
   592  06F0                     l788:
   593  06F0  3008               	movlw	8
   594  06F1  027C               	subwf	escribir_caracter_especial@i,w
   595  06F2  1C03               	skipc
   596  06F3  2EF5               	goto	u51
   597  06F4  2EF6               	goto	u50
   598  06F5                     u51:
   599  06F5  2EE3               	goto	l784
   600  06F6                     u50:
   601  06F6                     l790:
   602                           
   603                           ;LCD16x2.c: 58:     escribir_comando(0b10000000|direccion_DDRAM);
   604  06F6  087D               	movf	_direccion_DDRAM,w
   605  06F7  3880               	iorlw	128
   606  06F8  120A  118A  26FE  120A  118A  	fcall	_escribir_comando
   607  06FD                     l64:
   608  06FD  0008               	return
   609  06FE                     __end_of_escribir_caracter_especial:
   610                           
   611                           	psect	text2
   612  0740                     __ptext2:	
   613 ;; *************** function _leer_direccion_DDRAM *****************
   614 ;; Defined at:
   615 ;;		line 42 in file "LCD16x2.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      unsigned char 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          2       0       0       0       0
   632 ;;      Totals:         2       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 1
   636 ;; This function calls:
   637 ;;		_LCD_delay
   638 ;; This function is called by:
   639 ;;		_escribir_caracter_especial
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643  0740                     _leer_direccion_DDRAM:	
   644                           ;psect for function _leer_direccion_DDRAM
   645                           
   646  0740                     l718:	
   647                           ;incstack = 0
   648                           ; Regs used in _leer_direccion_DDRAM: [wreg+status,2+status,0+pclath+cstack]
   649                           
   650                           
   651                           ;LCD16x2.c: 43:     TRISB=0xF0;
   652  0740  30F0               	movlw	240
   653  0741  1683               	bsf	3,5	;RP0=1, select bank1
   654  0742  1303               	bcf	3,6	;RP1=0, select bank1
   655  0743  0086               	movwf	6	;volatile
   656  0744                     l720:
   657                           
   658                           ;LCD16x2.c: 44:     PORTBbits.RB2=1; LCD_delay();PORTBbits.RB3=1;LCD_delay();
   659  0744  1283               	bcf	3,5	;RP0=0, select bank0
   660  0745  1303               	bcf	3,6	;RP1=0, select bank0
   661  0746  1506               	bsf	6,2	;volatile
   662  0747                     l722:
   663  0747  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   664  074C                     l724:
   665  074C  1283               	bcf	3,5	;RP0=0, select bank0
   666  074D  1303               	bcf	3,6	;RP1=0, select bank0
   667  074E  1586               	bsf	6,3	;volatile
   668  074F                     l726:
   669  074F  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   670  0754                     l728:
   671                           
   672                           ;LCD16x2.c: 45:     direccion_DDRAM=(PORTB&0xF0);
   673  0754  1283               	bcf	3,5	;RP0=0, select bank0
   674  0755  1303               	bcf	3,6	;RP1=0, select bank0
   675  0756  0806               	movf	6,w	;volatile
   676  0757  39F0               	andlw	240
   677  0758  00F8               	movwf	??_leer_direccion_DDRAM
   678  0759  0878               	movf	??_leer_direccion_DDRAM,w
   679  075A  00FD               	movwf	_direccion_DDRAM
   680  075B                     l730:
   681                           
   682                           ;LCD16x2.c: 46:     PORTBbits.RB3=0;LCD_delay();PORTBbits.RB3=1;LCD_delay();
   683  075B  1186               	bcf	6,3	;volatile
   684  075C                     l732:
   685  075C  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   686  0761                     l734:
   687  0761  1283               	bcf	3,5	;RP0=0, select bank0
   688  0762  1303               	bcf	3,6	;RP1=0, select bank0
   689  0763  1586               	bsf	6,3	;volatile
   690  0764                     l736:
   691  0764  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   692  0769                     l738:
   693                           
   694                           ;LCD16x2.c: 47:     direccion_DDRAM=(((PORTB&0xF0)>>4)&0x0F)|direccion_DDRAM;
   695  0769  1283               	bcf	3,5	;RP0=0, select bank0
   696  076A  1303               	bcf	3,6	;RP1=0, select bank0
   697  076B  0806               	movf	6,w	;volatile
   698  076C  00F8               	movwf	??_leer_direccion_DDRAM
   699  076D  3004               	movlw	4
   700  076E                     u35:
   701  076E  1003               	clrc
   702  076F  0CF8               	rrf	??_leer_direccion_DDRAM,f
   703  0770  3EFF               	addlw	-1
   704  0771  1D03               	skipz
   705  0772  2F6E               	goto	u35
   706  0773  0878               	movf	??_leer_direccion_DDRAM,w
   707  0774  390F               	andlw	15
   708  0775  047D               	iorwf	_direccion_DDRAM,w
   709  0776  00F9               	movwf	??_leer_direccion_DDRAM+1
   710  0777  0879               	movf	??_leer_direccion_DDRAM+1,w
   711  0778  00FD               	movwf	_direccion_DDRAM
   712  0779                     l740:
   713                           
   714                           ;LCD16x2.c: 48:     PORTBbits.RB3=0;PORTBbits.RB2=0;LCD_delay();
   715  0779  1186               	bcf	6,3	;volatile
   716  077A                     l742:
   717  077A  1106               	bcf	6,2	;volatile
   718  077B                     l744:
   719  077B  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   720  0780                     l746:
   721                           
   722                           ;LCD16x2.c: 49:     TRISB=0x00;
   723  0780  1683               	bsf	3,5	;RP0=1, select bank1
   724  0781  1303               	bcf	3,6	;RP1=0, select bank1
   725  0782  0186               	clrf	6	;volatile
   726  0783                     l748:
   727                           
   728                           ;LCD16x2.c: 50:     return(direccion_DDRAM);
   729  0783  087D               	movf	_direccion_DDRAM,w
   730  0784                     l59:
   731  0784  0008               	return
   732  0785                     __end_of_leer_direccion_DDRAM:
   733                           
   734                           	psect	text3
   735  06FE                     __ptext3:	
   736 ;; *************** function _escribir_comando *****************
   737 ;; Defined at:
   738 ;;		line 21 in file "LCD16x2.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  comando         1    wreg     unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  comando         1    1[COMMON] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0
   754 ;;      Temps:          1       0       0       0       0
   755 ;;      Totals:         2       0       0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 1
   759 ;; This function calls:
   760 ;;		_LCD_delay
   761 ;; This function is called by:
   762 ;;		_main
   763 ;;		_escribir_caracter_especial
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767  06FE                     _escribir_comando:	
   768                           ;psect for function _escribir_comando
   769                           
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _escribir_comando: [wreg+status,2+status,0+pclath+cstack]
   773                           ;escribir_comando@comando stored from wreg
   774  06FE  00F9               	movwf	escribir_comando@comando
   775  06FF                     l658:
   776                           
   777                           ;LCD16x2.c: 22:     PORTB = (comando)&0xF0;
   778  06FF  0879               	movf	escribir_comando@comando,w
   779  0700  39F0               	andlw	240
   780  0701  1283               	bcf	3,5	;RP0=0, select bank0
   781  0702  1303               	bcf	3,6	;RP1=0, select bank0
   782  0703  0086               	movwf	6	;volatile
   783  0704                     l660:
   784                           
   785                           ;LCD16x2.c: 23:     LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbits.RB3 = 0;LCD_dela
      +                          y();
   786  0704  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   787  0709                     l662:
   788  0709  1283               	bcf	3,5	;RP0=0, select bank0
   789  070A  1303               	bcf	3,6	;RP1=0, select bank0
   790  070B  1586               	bsf	6,3	;volatile
   791  070C                     l664:
   792  070C  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   793  0711                     l666:
   794  0711  1283               	bcf	3,5	;RP0=0, select bank0
   795  0712  1303               	bcf	3,6	;RP1=0, select bank0
   796  0713  1186               	bcf	6,3	;volatile
   797  0714                     l668:
   798  0714  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   799  0719                     l670:
   800                           
   801                           ;LCD16x2.c: 24:     PORTB = (comando<<4)&0xF0;
   802  0719  0879               	movf	escribir_comando@comando,w
   803  071A  00F8               	movwf	??_escribir_comando
   804  071B  3003               	movlw	3
   805  071C                     u15:
   806  071C  1003               	clrc
   807  071D  0DF8               	rlf	??_escribir_comando,f
   808  071E  3EFF               	addlw	-1
   809  071F  1D03               	skipz
   810  0720  2F1C               	goto	u15
   811  0721  1003               	clrc
   812  0722  0D78               	rlf	??_escribir_comando,w
   813  0723  39F0               	andlw	240
   814  0724  1283               	bcf	3,5	;RP0=0, select bank0
   815  0725  1303               	bcf	3,6	;RP1=0, select bank0
   816  0726  0086               	movwf	6	;volatile
   817  0727                     l672:
   818                           
   819                           ;LCD16x2.c: 25:     LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbits.RB3 = 0;LCD_dela
      +                          y();
   820  0727  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   821  072C                     l674:
   822  072C  1283               	bcf	3,5	;RP0=0, select bank0
   823  072D  1303               	bcf	3,6	;RP1=0, select bank0
   824  072E  1586               	bsf	6,3	;volatile
   825  072F                     l676:
   826  072F  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   827  0734                     l678:
   828  0734  1283               	bcf	3,5	;RP0=0, select bank0
   829  0735  1303               	bcf	3,6	;RP1=0, select bank0
   830  0736  1186               	bcf	6,3	;volatile
   831  0737                     l680:
   832  0737  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   833  073C                     l682:
   834                           
   835                           ;LCD16x2.c: 26:     PORTB = 0x00;
   836  073C  1283               	bcf	3,5	;RP0=0, select bank0
   837  073D  1303               	bcf	3,6	;RP1=0, select bank0
   838  073E  0186               	clrf	6	;volatile
   839  073F                     l47:
   840  073F  0008               	return
   841  0740                     __end_of_escribir_comando:
   842                           
   843                           	psect	text4
   844  065D                     __ptext4:	
   845 ;; *************** function _escribir_cadena *****************
   846 ;; Defined at:
   847 ;;		line 35 in file "LCD16x2.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  cadena          1    wreg     PTR unsigned char 
   850 ;;		 -> STR_1(9), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  cadena          1    3[COMMON] PTR unsigned char 
   853 ;;		 -> STR_1(9), 
   854 ;;  i               1    4[COMMON] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         2       0       0       0       0
   866 ;;      Temps:          1       0       0       0       0
   867 ;;      Totals:         3       0       0       0       0
   868 ;;Total ram usage:        3 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 2
   871 ;; This function calls:
   872 ;;		_escribir_caracter
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878  065D                     _escribir_cadena:	
   879                           ;psect for function _escribir_cadena
   880                           
   881                           
   882                           ;incstack = 0
   883                           ; Regs used in _escribir_cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   884                           ;escribir_cadena@cadena stored from wreg
   885  065D  00FB               	movwf	escribir_cadena@cadena
   886  065E                     l806:
   887                           
   888                           ;LCD16x2.c: 36:     char i = 0;
   889  065E  01FC               	clrf	escribir_cadena@i
   890                           
   891                           ;LCD16x2.c: 37:     while(cadena[i]!=0) {
   892  065F  2E71               	goto	l812
   893  0660                     l808:
   894                           
   895                           ;LCD16x2.c: 38:  escribir_caracter(cadena[i]);
   896  0660  087C               	movf	escribir_cadena@i,w
   897  0661  077B               	addwf	escribir_cadena@cadena,w
   898  0662  0084               	movwf	4
   899  0663  120A  118A  2003  120A  118A  	fcall	stringdir
   900  0668  120A  118A  2785  120A  118A  	fcall	_escribir_caracter
   901  066D                     l810:
   902                           
   903                           ;LCD16x2.c: 39:  i++;
   904  066D  3001               	movlw	1
   905  066E  00FA               	movwf	??_escribir_cadena
   906  066F  087A               	movf	??_escribir_cadena,w
   907  0670  07FC               	addwf	escribir_cadena@i,f
   908  0671                     l812:
   909                           
   910                           ;LCD16x2.c: 37:     while(cadena[i]!=0) {
   911  0671  087C               	movf	escribir_cadena@i,w
   912  0672  077B               	addwf	escribir_cadena@cadena,w
   913  0673  0084               	movwf	4
   914  0674  120A  118A  2003  120A  118A  	fcall	stringdir
   915  0679  3A00               	xorlw	0
   916  067A  1D03               	skipz
   917  067B  2E7D               	goto	u61
   918  067C  2E7E               	goto	u60
   919  067D                     u61:
   920  067D  2E60               	goto	l808
   921  067E                     u60:
   922  067E                     l56:
   923  067E  0008               	return
   924  067F                     __end_of_escribir_cadena:
   925                           
   926                           	psect	text5
   927  0785                     __ptext5:	
   928 ;; *************** function _escribir_caracter *****************
   929 ;; Defined at:
   930 ;;		line 28 in file "LCD16x2.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  caracter        1    wreg     unsigned char 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  caracter        1    1[COMMON] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         1       0       0       0       0
   946 ;;      Temps:          1       0       0       0       0
   947 ;;      Totals:         2       0       0       0       0
   948 ;;Total ram usage:        2 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 1
   951 ;; This function calls:
   952 ;;		_LCD_delay
   953 ;; This function is called by:
   954 ;;		_main
   955 ;;		_escribir_cadena
   956 ;;		_escribir_caracter_especial
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960  0785                     _escribir_caracter:	
   961                           ;psect for function _escribir_caracter
   962                           
   963                           
   964                           ;incstack = 0
   965                           ; Regs used in _escribir_caracter: [wreg+status,2+status,0+pclath+cstack]
   966                           ;escribir_caracter@caracter stored from wreg
   967  0785  00F9               	movwf	escribir_caracter@caracter
   968  0786                     l684:
   969                           
   970                           ;LCD16x2.c: 29:     PORTB = (caracter)&0xF0;
   971  0786  0879               	movf	escribir_caracter@caracter,w
   972  0787  39F0               	andlw	240
   973  0788  1283               	bcf	3,5	;RP0=0, select bank0
   974  0789  1303               	bcf	3,6	;RP1=0, select bank0
   975  078A  0086               	movwf	6	;volatile
   976  078B                     l686:
   977                           
   978                           ;LCD16x2.c: 30:     PORTBbits.RB1 = 1; LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbi
      +                          ts.RB3 = 0;LCD_delay();PORTBbits.RB1 = 0;
   979  078B  1486               	bsf	6,1	;volatile
   980  078C                     l688:
   981  078C  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   982  0791                     l690:
   983  0791  1283               	bcf	3,5	;RP0=0, select bank0
   984  0792  1303               	bcf	3,6	;RP1=0, select bank0
   985  0793  1586               	bsf	6,3	;volatile
   986  0794                     l692:
   987  0794  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   988  0799                     l694:
   989  0799  1283               	bcf	3,5	;RP0=0, select bank0
   990  079A  1303               	bcf	3,6	;RP1=0, select bank0
   991  079B  1186               	bcf	6,3	;volatile
   992  079C                     l696:
   993  079C  120A  118A  2640  120A  118A  	fcall	_LCD_delay
   994  07A1                     l698:
   995  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   996  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   997  07A3  1086               	bcf	6,1	;volatile
   998  07A4                     l700:
   999                           
  1000                           ;LCD16x2.c: 31:     PORTB = (caracter<<4)&0xF0;
  1001  07A4  0879               	movf	escribir_caracter@caracter,w
  1002  07A5  00F8               	movwf	??_escribir_caracter
  1003  07A6  3003               	movlw	3
  1004  07A7                     u25:
  1005  07A7  1003               	clrc
  1006  07A8  0DF8               	rlf	??_escribir_caracter,f
  1007  07A9  3EFF               	addlw	-1
  1008  07AA  1D03               	skipz
  1009  07AB  2FA7               	goto	u25
  1010  07AC  1003               	clrc
  1011  07AD  0D78               	rlf	??_escribir_caracter,w
  1012  07AE  39F0               	andlw	240
  1013  07AF  0086               	movwf	6	;volatile
  1014  07B0                     l702:
  1015                           
  1016                           ;LCD16x2.c: 32:     PORTBbits.RB1 = 1;LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbit
      +                          s.RB3 = 0;LCD_delay();PORTBbits.RB1 = 0;
  1017  07B0  1486               	bsf	6,1	;volatile
  1018  07B1                     l704:
  1019  07B1  120A  118A  2640  120A  118A  	fcall	_LCD_delay
  1020  07B6                     l706:
  1021  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1022  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1023  07B8  1586               	bsf	6,3	;volatile
  1024  07B9                     l708:
  1025  07B9  120A  118A  2640  120A  118A  	fcall	_LCD_delay
  1026  07BE                     l710:
  1027  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1028  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1029  07C0  1186               	bcf	6,3	;volatile
  1030  07C1                     l712:
  1031  07C1  120A  118A  2640  120A  118A  	fcall	_LCD_delay
  1032  07C6                     l714:
  1033  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1034  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1035  07C8  1086               	bcf	6,1	;volatile
  1036  07C9                     l716:
  1037                           
  1038                           ;LCD16x2.c: 33:     PORTB = 0x00;
  1039  07C9  0186               	clrf	6	;volatile
  1040  07CA                     l50:
  1041  07CA  0008               	return
  1042  07CB                     __end_of_escribir_caracter:
  1043                           
  1044                           	psect	text6
  1045  067F                     __ptext6:	
  1046 ;; *************** function _LCD_Init *****************
  1047 ;; Defined at:
  1048 ;;		line 8 in file "LCD16x2.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 1
  1069 ;; This function calls:
  1070 ;;		_LCD_delay
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076  067F                     _LCD_Init:	
  1077                           ;psect for function _LCD_Init
  1078                           
  1079  067F                     l752:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1082                           
  1083                           
  1084                           ;LCD16x2.c: 9:     TRISBbits.TRISB1 = 0;TRISBbits.TRISB2 = 0;TRISBbits.TRISB3 = 0;
  1085  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0681  1086               	bcf	6,1	;volatile
  1088  0682  1106               	bcf	6,2	;volatile
  1089  0683  1186               	bcf	6,3	;volatile
  1090                           
  1091                           ;LCD16x2.c: 10:     PORTBbits.RB1=0;PORTBbits.RB2=0;PORTBbits.RB3=0;
  1092  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0686  1086               	bcf	6,1	;volatile
  1095  0687  1106               	bcf	6,2	;volatile
  1096  0688  1186               	bcf	6,3	;volatile
  1097  0689                     l754:
  1098                           
  1099                           ;LCD16x2.c: 11:     TRISB = 0x01;
  1100  0689  3001               	movlw	1
  1101  068A  1683               	bsf	3,5	;RP0=1, select bank1
  1102  068B  1303               	bcf	3,6	;RP1=0, select bank1
  1103  068C  0086               	movwf	6	;volatile
  1104                           
  1105                           ;LCD16x2.c: 13:     PORTB = 0b00100000;
  1106  068D  3020               	movlw	32
  1107  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1108  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0690  0086               	movwf	6	;volatile
  1110  0691                     l756:
  1111                           
  1112                           ;LCD16x2.c: 14:     LCD_delay();
  1113  0691  120A  118A  2640  120A  118A  	fcall	_LCD_delay
  1114  0696                     l758:
  1115                           
  1116                           ;LCD16x2.c: 15:     PORTBbits.RB3 = 1;
  1117  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0698  1586               	bsf	6,3	;volatile
  1120  0699                     l760:
  1121                           
  1122                           ;LCD16x2.c: 16:     LCD_delay();
  1123  0699  120A  118A  2640  120A  118A  	fcall	_LCD_delay
  1124  069E                     l762:
  1125                           
  1126                           ;LCD16x2.c: 17:     PORTBbits.RB3 = 0;
  1127  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1128  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1129  06A0  1186               	bcf	6,3	;volatile
  1130  06A1                     l764:
  1131                           
  1132                           ;LCD16x2.c: 18:     PORTB = 0x00;
  1133  06A1  0186               	clrf	6	;volatile
  1134  06A2                     l44:
  1135  06A2  0008               	return
  1136  06A3                     __end_of_LCD_Init:
  1137                           
  1138                           	psect	text7
  1139  0640                     __ptext7:	
  1140 ;; *************** function _LCD_delay *****************
  1141 ;; Defined at:
  1142 ;;		line 5 in file "LCD16x2.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		None
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0
  1159 ;;      Totals:         0       0       0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;;		_LCD_Init
  1167 ;;		_escribir_comando
  1168 ;;		_escribir_caracter
  1169 ;;		_leer_direccion_DDRAM
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173  0640                     _LCD_delay:	
  1174                           ;psect for function _LCD_delay
  1175                           
  1176  0640                     l656:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _LCD_delay: []
  1179                           
  1180                           
  1181                           ;LCD16x2.c: 6:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  1182  0640  0000               	nop
  1183  0641                     l41:
  1184  0641  0008               	return
  1185  0642                     __end_of_LCD_delay:
  1186  007E                     btemp	set	126	;btemp
  1187  007E                     wtemp0	set	126
  1188                           
  1189                           	psect	idloc
  1190                           
  1191                           ;Config register IDLOC0 @ 0x2000
  1192                           ;	unspecified, using default values
  1193  2000                     	org	8192
  1194  2000  3FFF               	dw	16383
  1195                           
  1196                           ;Config register IDLOC1 @ 0x2001
  1197                           ;	unspecified, using default values
  1198  2001                     	org	8193
  1199  2001  3FFF               	dw	16383
  1200                           
  1201                           ;Config register IDLOC2 @ 0x2002
  1202                           ;	unspecified, using default values
  1203  2002                     	org	8194
  1204  2002  3FFF               	dw	16383
  1205                           
  1206                           ;Config register IDLOC3 @ 0x2003
  1207                           ;	unspecified, using default values
  1208  2003                     	org	8195
  1209  2003  3FFF               	dw	16383
  1210                           
  1211                           	psect	config
  1212                           
  1213                           ;Config register CONFIG @ 0x2007
  1214                           ;	Oscillator Selection bits
  1215                           ;	FOSC = XT, XT oscillator
  1216                           ;	Watchdog Timer Enable bit
  1217                           ;	WDTE = OFF, WDT disabled
  1218                           ;	Power-up Timer Enable bit
  1219                           ;	PWRTE = ON, PWRT enabled
  1220                           ;	Brown-out Reset Enable bit
  1221                           ;	BOREN = ON, BOR enabled
  1222                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1223                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1224                           ;	Data EEPROM Memory Code Protection bit
  1225                           ;	CPD = OFF, Data EEPROM code protection off
  1226                           ;	Flash Program Memory Write Enable bits
  1227                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1228                           ;	In-Circuit Debugger Mode bit
  1229                           ;	DEBUG = 0x1, unprogrammed default
  1230                           ;	Flash Program Memory Code Protection bit
  1231                           ;	CP = OFF, Code protection off
  1232  2007                     	org	8199
  1233  2007  3F71               	dw	16241

Data Sizes:
    Strings     9
    Constant    0
    Data        8
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    escribir_caracter_especial@DirCGRAM	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    escribir_cadena@cadena	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_escribir_cadena
    _main->_escribir_caracter_especial
    _escribir_caracter_especial->_escribir_caracter
    _escribir_caracter_especial->_escribir_comando
    _escribir_caracter_especial->_leer_direccion_DDRAM
    _escribir_cadena->_escribir_caracter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     378
                           _LCD_Init
                          _LCD_delay
                    _escribir_cadena
                  _escribir_caracter
         _escribir_caracter_especial
                   _escribir_comando
 ---------------------------------------------------------------------------------
 (1) _escribir_caracter_especial                           3     3      0     165
                                              2 COMMON     3     3      0
                  _escribir_caracter
                   _escribir_comando
               _leer_direccion_DDRAM
 ---------------------------------------------------------------------------------
 (2) _leer_direccion_DDRAM                                 2     2      0       0
                                              0 COMMON     2     2      0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (1) _escribir_comando                                     2     2      0      30
                                              0 COMMON     2     2      0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (1) _escribir_cadena                                      3     3      0     153
                                              2 COMMON     3     3      0
                  _escribir_caracter
 ---------------------------------------------------------------------------------
 (2) _escribir_caracter                                    2     2      0      30
                                              0 COMMON     2     2      0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (2) _LCD_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_delay
   _LCD_delay
   _escribir_cadena
     _escribir_caracter
       _LCD_delay
   _escribir_caracter
   _escribir_caracter_especial
     _escribir_caracter
     _escribir_comando
       _LCD_delay
     _leer_direccion_DDRAM
       _LCD_delay
   _escribir_comando

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 11 17:27:19 2022

                                 pc 0002                                  l21 06CB  
                                l22 06CB                                  l41 0641  
                                l50 07CA                                  l44 06A2  
                                l47 073F                                  l56 067E  
                                l64 06FD                                  l59 0784  
                                u15 071C                                  u25 07A7  
                                u50 06F6                                  u35 076E  
                                u51 06F5                                  u60 067E  
                                u61 067D                                  fsr 0004  
                               l700 07A4                                 l710 07BE  
                               l702 07B0                                 l712 07C1  
                               l704 07B1                                 l720 0744  
                               l714 07C6                                 l706 07B6  
                               l810 066D                                 l730 075B  
                               l722 0747                                 l716 07C9  
                               l708 07B9                                 l812 0671  
                               l660 0704                                 l740 0779  
                               l732 075C                                 l724 074C  
                               l820 06B3                                 l806 065E  
                               l670 0719                                 l662 0709  
                               l742 077A                                 l734 0761  
                               l726 074F                                 l718 0740  
                               l822 06B9                                 l814 06A3  
                               l656 0640                                 l760 0699  
                               l752 067F                                 l808 0660  
                               l680 0737                                 l672 0727  
                               l664 070C                                 l744 077B  
                               l736 0764                                 l728 0754  
                               l824 06BF                                 l816 06A8  
                               l762 069E                                 l754 0689  
                               l690 0791                                 l682 073C  
                               l674 072C                                 l666 0711  
                               l658 06FF                                 l746 0780  
                               l738 0769                                 l826 06C5  
                               l818 06AD                                 l764 06A1  
                               l756 0691                                 l692 0794  
                               l684 0786                                 l676 072F  
                               l668 0714                                 l748 0783  
                               l758 0696                                 l694 0799  
                               l686 078B                                 l678 0734  
                               l790 06F6                                 l774 06D0  
                               l696 079C                                 l688 078C  
                               l784 06E3                                 l776 06D8  
                               l698 07A1                                 l786 06EC  
                               l778 06E2                                 l788 06F0  
                               fsr0 0004                                 indf 0000  
                              STR_1 0009                                _main 06A3  
                              btemp 007E  __end_of_escribir_caracter_especial 06FE  
        _escribir_caracter_especial 06CF                                start 0000  
              _leer_direccion_DDRAM 0740  escribir_caracter_especial@DirCGRAM 007B  
                  __end_of_LCD_Init 06A3                               ?_main 0078  
                             _PORTB 0006                               _TRISB 0086  
                             pclath 000A                               status 0003  
                             wtemp0 007E               ?_leer_direccion_DDRAM 0078  
                   __initialization 07CB                        __end_of_main 06CF  
          __end_of_escribir_comando 0740                              ??_main 007D  
                 __end_of_LCD_delay 0642                              _CGRAM1 0070  
                 ??_escribir_cadena 007A                        __pdataCOMMON 0070  
           __end_of__initialization 07FC                           ?_LCD_Init 0078  
            ??_leer_direccion_DDRAM 0078                      __pcstackCOMMON 0078  
                   _direccion_DDRAM 007D                          ??_LCD_Init 0078  
       ?_escribir_caracter_especial 0078                          __pmaintext 06A3  
                        __stringtab 0003                   ?_escribir_comando 0078  
                ??_escribir_comando 0078                             __ptext1 06CF  
                           __ptext2 0740                             __ptext3 06FE  
                           __ptext4 065D                             __ptext5 0785  
                           __ptext6 067F                             __ptext7 0640  
                         _LCD_delay 0640                end_of_initialization 07FC  
                   _escribir_cadena 065D                           _PORTBbits 0006  
                         _TRISBbits 0086                          ?_LCD_delay 0078  
             escribir_cadena@cadena 007B                       __pidataCOMMON 0642  
               start_initialization 07CB             __end_of_escribir_cadena 067F  
                        init_fetch0 064A                         __pbssCOMMON 007D  
                         ___latbits 0002                         ??_LCD_delay 0078  
                         __pstrings 0003             escribir_comando@comando 0079  
       escribir_caracter_especial@i 007C                    ?_escribir_cadena 0078  
                          _LCD_Init 067F                         __stringbase 0008  
                 _escribir_caracter 0785                  ?_escribir_caracter 0078  
                __end_of__stringtab 0009                 ??_escribir_caracter 0078  
         __end_of_escribir_caracter 07CB        ??_escribir_caracter_especial 007A  
      __end_of_leer_direccion_DDRAM 0785                            init_ram0 064E  
                  _escribir_comando 06FE                           stringcode 0003  
                  escribir_cadena@i 007C                            stringdir 0003  
                          stringtab 0003           escribir_caracter@caracter 0079  
