

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 12 16:03:02 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0088                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240                           
   241                           	psect	idataBANK0
   242  01D6                     __pidataBANK0:
   243                           
   244                           ;initializer for _CGRAM1
   245  01D6  340A               	retlw	10
   246  01D7  340A               	retlw	10
   247  01D8  340A               	retlw	10
   248  01D9  340A               	retlw	10
   249  01DA  3400               	retlw	0
   250  01DB  3411               	retlw	17
   251  01DC  340E               	retlw	14
   252  01DD  3400               	retlw	0
   253  0006                     _PORTB	set	6
   254  0006                     _PORTBbits	set	6
   255  0007                     _PORTC	set	7
   256  000B                     _INTCONbits	set	11
   257  0086                     _TRISB	set	134
   258  0086                     _TRISBbits	set	134
   259  0087                     _TRISC	set	135
   260                           
   261                           	psect	strings
   262  01AE                     __pstrings:
   263  01AE                     stringtab:
   264  01AE                     __stringtab:
   265  01AE                     stringcode:	
   266                           ;	String table - string pointers are 1 byte each
   267                           
   268  01AE                     stringdir:
   269  01AE  3001               	movlw	high stringdir
   270  01AF  008A               	movwf	10
   271  01B0  0804               	movf	4,w
   272  01B1  0A84               	incf	4,f
   273  01B2  0782               	addwf	2,f
   274  01B3                     __stringbase:
   275  01B3  3400               	retlw	0
   276  01B4                     __end_of__stringtab:
   277  01B4                     STR_1:
   278  01B4  3450               	retlw	80	;'P'
   279  01B5  3472               	retlw	114	;'r'
   280  01B6  3475               	retlw	117	;'u'
   281  01B7  3465               	retlw	101	;'e'
   282  01B8  3462               	retlw	98	;'b'
   283  01B9  3461               	retlw	97	;'a'
   284  01BA  3420               	retlw	32	;' '
   285  01BB  3433               	retlw	51	;'3'
   286  01BC  3400               	retlw	0
   287                           
   288                           	psect	cinit
   289  000F                     start_initialization:	
   290                           ; #config settings
   291                           
   292  000F                     __initialization:
   293                           
   294                           ; Initialize objects allocated to BANK0
   295  000F  1383               	bcf	3,7	;select IRP bank0
   296  0010  3028               	movlw	low (__pdataBANK0+8)
   297  0011  00FD               	movwf	btemp+-1
   298  0012  3001               	movlw	high __pidataBANK0
   299  0013  00FE               	movwf	btemp
   300  0014  30D6               	movlw	low __pidataBANK0
   301  0015  00FF               	movwf	btemp+1
   302  0016  3020               	movlw	low __pdataBANK0
   303  0017  0084               	movwf	4
   304  0018  120A  118A  219F  120A  118A  	fcall	init_ram0
   305                           
   306                           ; Clear objects allocated to COMMON
   307  001D  01F9               	clrf	__pbssCOMMON& (0+127)
   308  001E                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311  001E                     __end_of__initialization:
   312  001E  0183               	clrf	3
   313  001F  120A  118A  28EF   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMMON
   316  0079                     __pbssCOMMON:
   317  0079                     _direccion_DDRAM:
   318  0079                     	ds	1
   319                           
   320                           	psect	dataBANK0
   321  0020                     __pdataBANK0:
   322  0020                     _CGRAM1:
   323  0020                     	ds	8
   324                           
   325                           	psect	inittext
   326  019B                     init_fetch0:	
   327                           ;	Called with low address in FSR and high address in W
   328                           
   329  019B  087E               	movf	btemp,w
   330  019C  008A               	movwf	10
   331  019D  087F               	movf	btemp+1,w
   332  019E  0082               	movwf	2
   333  019F                     init_ram0:	
   334                           ;Called with:
   335                           ;	high address of idata address in btemp 
   336                           ;	low address of idata address in btemp+1 
   337                           ;	low address of data in FSR
   338                           ;	high address + 1 of data in btemp-1
   339                           
   340  019F  120A  118A  219B  120A  118A  	fcall	init_fetch0
   341  01A4  0080               	movwf	0
   342  01A5  0A84               	incf	4,f
   343  01A6  0804               	movf	4,w
   344  01A7  067D               	xorwf	btemp+-1,w
   345  01A8  1903               	btfsc	3,2
   346  01A9  3400               	retlw	0
   347  01AA  0AFF               	incf	btemp+1,f
   348  01AB  1903               	btfsc	3,2
   349  01AC  0AFE               	incf	btemp,f
   350  01AD  299F               	goto	init_ram0
   351                           
   352                           	psect	cstackCOMMON
   353  0070                     __pcstackCOMMON:
   354  0070                     ?_LCD_delay:
   355  0070                     ?_LCD_Init:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_escribir_comando:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_escribir_caracter:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_escribir_cadena:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_escribir_caracter_especial:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_main:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_ISR:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_ISR:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_leer_direccion_DDRAM:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0070                     	ds	2
   385  0072                     ??_LCD_delay:
   386                           
   387                           ; 1 bytes @ 0x2
   388  0072                     	ds	2
   389  0074                     ??_LCD_Init:
   390  0074                     ??_escribir_comando:	
   391                           ; 1 bytes @ 0x4
   392                           
   393  0074                     ??_escribir_caracter:	
   394                           ; 1 bytes @ 0x4
   395                           
   396  0074                     ??_leer_direccion_DDRAM:	
   397                           ; 1 bytes @ 0x4
   398                           
   399                           
   400                           ; 1 bytes @ 0x4
   401  0074                     	ds	1
   402  0075                     escribir_comando@comando:
   403  0075                     escribir_caracter@caracter:	
   404                           ; 1 bytes @ 0x5
   405                           
   406                           
   407                           ; 1 bytes @ 0x5
   408  0075                     	ds	1
   409  0076                     ??_escribir_cadena:
   410  0076                     ??_escribir_caracter_especial:	
   411                           ; 1 bytes @ 0x6
   412                           
   413                           
   414                           ; 1 bytes @ 0x6
   415  0076                     	ds	1
   416  0077                     escribir_cadena@cadena:
   417  0077                     escribir_caracter_especial@DirCGRAM:	
   418                           ; 1 bytes @ 0x7
   419                           
   420                           
   421                           ; 1 bytes @ 0x7
   422  0077                     	ds	1
   423  0078                     escribir_cadena@i:
   424  0078                     escribir_caracter_especial@i:	
   425                           ; 1 bytes @ 0x8
   426                           
   427                           
   428                           ; 1 bytes @ 0x8
   429  0078                     	ds	1
   430  0079                     ??_main:
   431                           
   432                           	psect	maintext
   433  00EF                     __pmaintext:	
   434                           ; 1 bytes @ 0x9
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 6 in file "Main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels required when called: 4
   460 ;; This function calls:
   461 ;;		_LCD_Init
   462 ;;		_LCD_delay
   463 ;;		_escribir_cadena
   464 ;;		_escribir_caracter
   465 ;;		_escribir_caracter_especial
   466 ;;		_escribir_comando
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472  00EF                     _main:	
   473                           ;psect for function _main
   474                           
   475  00EF                     l960:	
   476                           ;incstack = 0
   477                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   478                           
   479                           
   480                           ;Main.c: 8:     LCD_delay();
   481  00EF  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   482                           
   483                           ;Main.c: 9:     LCD_Init();
   484  00F4  120A  118A  2155  120A  118A  	fcall	_LCD_Init
   485                           
   486                           ;Main.c: 11:     escribir_comando(0b00001111);
   487  00F9  300F               	movlw	15
   488  00FA  120A  118A  20AD  120A  118A  	fcall	_escribir_comando
   489                           
   490                           ;Main.c: 12:     escribir_caracter('3');
   491  00FF  3033               	movlw	51
   492  0100  120A  118A  2022  120A  118A  	fcall	_escribir_caracter
   493  0105                     l962:
   494                           
   495                           ;Main.c: 13:     escribir_cadena("Prueba 3");
   496  0105  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   497  0106  120A  118A  2179  120A  118A  	fcall	_escribir_cadena
   498  010B                     l964:
   499                           
   500                           ;Main.c: 14:     escribir_caracter_especial(0b00000000);
   501  010B  3000               	movlw	0
   502  010C  120A  118A  2125  120A  118A  	fcall	_escribir_caracter_especial
   503                           
   504                           ;Main.c: 15:     escribir_caracter(0);
   505  0111  3000               	movlw	0
   506  0112  120A  118A  2022  120A  118A  	fcall	_escribir_caracter
   507  0117                     l966:
   508                           
   509                           ;Main.c: 17:     INTCONbits.GIE = 1;
   510  0117  178B               	bsf	11,7	;volatile
   511  0118                     l968:
   512                           
   513                           ;Main.c: 18:     INTCONbits.INTE = 1;
   514  0118  160B               	bsf	11,4	;volatile
   515  0119                     l970:
   516                           
   517                           ;Main.c: 19:     INTCONbits.INTF = 0;
   518  0119  108B               	bcf	11,1	;volatile
   519  011A                     l972:
   520                           
   521                           ;Main.c: 21:     TRISC = 0x00;
   522  011A  1683               	bsf	3,5	;RP0=1, select bank1
   523  011B  1303               	bcf	3,6	;RP1=0, select bank1
   524  011C  0187               	clrf	7	;volatile
   525  011D                     l974:
   526                           
   527                           ;Main.c: 22:     PORTC = 0b10101010;
   528  011D  30AA               	movlw	170
   529  011E  1283               	bcf	3,5	;RP0=0, select bank0
   530  011F  1303               	bcf	3,6	;RP1=0, select bank0
   531  0120  0087               	movwf	7	;volatile
   532  0121                     l27:	
   533                           ;Main.c: 23:     while(1);
   534                           
   535  0121                     l28:
   536  0121  2921               	goto	l27
   537  0122  120A  118A  280C   	ljmp	start
   538  0125                     __end_of_main:
   539                           
   540                           	psect	text1
   541  0125                     __ptext1:	
   542 ;; *************** function _escribir_caracter_especial *****************
   543 ;; Defined at:
   544 ;;		line 52 in file "LCD16x2.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  DirCGRAM        1    wreg     PTR unsigned char 
   547 ;;		 -> NULL(0), 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  DirCGRAM        1    7[COMMON] PTR unsigned char 
   550 ;;		 -> NULL(0), 
   551 ;;  i               1    8[COMMON] unsigned char 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         2       0       0       0       0
   563 ;;      Temps:          1       0       0       0       0
   564 ;;      Totals:         3       0       0       0       0
   565 ;;Total ram usage:        3 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 3
   568 ;; This function calls:
   569 ;;		_escribir_caracter
   570 ;;		_escribir_comando
   571 ;;		_leer_direccion_DDRAM
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577  0125                     _escribir_caracter_especial:	
   578                           ;psect for function _escribir_caracter_especial
   579                           
   580                           
   581                           ;incstack = 0
   582                           ; Regs used in _escribir_caracter_especial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   583                           ;escribir_caracter_especial@DirCGRAM stored from wreg
   584  0125  00F7               	movwf	escribir_caracter_especial@DirCGRAM
   585  0126                     l942:
   586                           
   587                           ;LCD16x2.c: 53:     direccion_DDRAM = leer_direccion_DDRAM();
   588  0126  120A  118A  2068  120A  118A  	fcall	_leer_direccion_DDRAM
   589  012B  00F6               	movwf	??_escribir_caracter_especial
   590  012C  0876               	movf	??_escribir_caracter_especial,w
   591  012D  00F9               	movwf	_direccion_DDRAM
   592  012E                     l944:
   593                           
   594                           ;LCD16x2.c: 54:     escribir_comando(0b01000000|*DirCGRAM);
   595  012E  0877               	movf	escribir_caracter_especial@DirCGRAM,w
   596  012F  0084               	movwf	4
   597  0130  1383               	bcf	3,7	;select IRP bank0
   598  0131  0800               	movf	0,w
   599  0132  3840               	iorlw	64
   600  0133  120A  118A  20AD  120A  118A  	fcall	_escribir_comando
   601  0138                     l946:
   602                           
   603                           ;LCD16x2.c: 55:     for(char i = 0; i<8;i++){
   604  0138  01F8               	clrf	escribir_caracter_especial@i
   605  0139                     l952:
   606                           
   607                           ;LCD16x2.c: 56:  escribir_caracter(CGRAM1[i]);
   608  0139  0878               	movf	escribir_caracter_especial@i,w
   609  013A  3E20               	addlw	(low (_CGRAM1| 0))& (0+255)
   610  013B  0084               	movwf	4
   611  013C  1383               	bcf	3,7	;select IRP bank0
   612  013D  0800               	movf	0,w
   613  013E  120A  118A  2022  120A  118A  	fcall	_escribir_caracter
   614  0143                     l954:
   615                           
   616                           ;LCD16x2.c: 57:     }
   617  0143  3001               	movlw	1
   618  0144  00F6               	movwf	??_escribir_caracter_especial
   619  0145  0876               	movf	??_escribir_caracter_especial,w
   620  0146  07F8               	addwf	escribir_caracter_especial@i,f
   621  0147                     l956:
   622  0147  3008               	movlw	8
   623  0148  0278               	subwf	escribir_caracter_especial@i,w
   624  0149  1C03               	skipc
   625  014A  294C               	goto	u111
   626  014B  294D               	goto	u110
   627  014C                     u111:
   628  014C  2939               	goto	l952
   629  014D                     u110:
   630  014D                     l958:
   631                           
   632                           ;LCD16x2.c: 58:     escribir_comando(0b10000000|direccion_DDRAM);
   633  014D  0879               	movf	_direccion_DDRAM,w
   634  014E  3880               	iorlw	128
   635  014F  120A  118A  20AD  120A  118A  	fcall	_escribir_comando
   636  0154                     l76:
   637  0154  0008               	return
   638  0155                     __end_of_escribir_caracter_especial:
   639                           
   640                           	psect	text2
   641  0068                     __ptext2:	
   642 ;; *************** function _leer_direccion_DDRAM *****************
   643 ;; Defined at:
   644 ;;		line 42 in file "LCD16x2.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      unsigned char 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          2       0       0       0       0
   661 ;;      Totals:         2       0       0       0       0
   662 ;;Total ram usage:        2 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; Hardware stack levels required when called: 2
   665 ;; This function calls:
   666 ;;		_LCD_delay
   667 ;; This function is called by:
   668 ;;		_escribir_caracter_especial
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672  0068                     _leer_direccion_DDRAM:	
   673                           ;psect for function _leer_direccion_DDRAM
   674                           
   675  0068                     l886:	
   676                           ;incstack = 0
   677                           ; Regs used in _leer_direccion_DDRAM: [wreg+status,2+status,0+pclath+cstack]
   678                           
   679                           
   680                           ;LCD16x2.c: 43:     TRISB=0xF0;
   681  0068  30F0               	movlw	240
   682  0069  1683               	bsf	3,5	;RP0=1, select bank1
   683  006A  1303               	bcf	3,6	;RP1=0, select bank1
   684  006B  0086               	movwf	6	;volatile
   685  006C                     l888:
   686                           
   687                           ;LCD16x2.c: 44:     PORTBbits.RB2=1; LCD_delay();PORTBbits.RB3=1;LCD_delay();
   688  006C  1283               	bcf	3,5	;RP0=0, select bank0
   689  006D  1303               	bcf	3,6	;RP1=0, select bank0
   690  006E  1506               	bsf	6,2	;volatile
   691  006F                     l890:
   692  006F  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   693  0074                     l892:
   694  0074  1283               	bcf	3,5	;RP0=0, select bank0
   695  0075  1303               	bcf	3,6	;RP1=0, select bank0
   696  0076  1586               	bsf	6,3	;volatile
   697  0077                     l894:
   698  0077  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   699  007C                     l896:
   700                           
   701                           ;LCD16x2.c: 45:     direccion_DDRAM=(PORTB&0xF0);
   702  007C  1283               	bcf	3,5	;RP0=0, select bank0
   703  007D  1303               	bcf	3,6	;RP1=0, select bank0
   704  007E  0806               	movf	6,w	;volatile
   705  007F  39F0               	andlw	240
   706  0080  00F4               	movwf	??_leer_direccion_DDRAM
   707  0081  0874               	movf	??_leer_direccion_DDRAM,w
   708  0082  00F9               	movwf	_direccion_DDRAM
   709  0083                     l898:
   710                           
   711                           ;LCD16x2.c: 46:     PORTBbits.RB3=0;LCD_delay();PORTBbits.RB3=1;LCD_delay();
   712  0083  1186               	bcf	6,3	;volatile
   713  0084                     l900:
   714  0084  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   715  0089                     l902:
   716  0089  1283               	bcf	3,5	;RP0=0, select bank0
   717  008A  1303               	bcf	3,6	;RP1=0, select bank0
   718  008B  1586               	bsf	6,3	;volatile
   719  008C                     l904:
   720  008C  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   721  0091                     l906:
   722                           
   723                           ;LCD16x2.c: 47:     direccion_DDRAM=(((PORTB&0xF0)>>4)&0x0F)|direccion_DDRAM;
   724  0091  1283               	bcf	3,5	;RP0=0, select bank0
   725  0092  1303               	bcf	3,6	;RP1=0, select bank0
   726  0093  0806               	movf	6,w	;volatile
   727  0094  00F4               	movwf	??_leer_direccion_DDRAM
   728  0095  3004               	movlw	4
   729  0096                     u95:
   730  0096  1003               	clrc
   731  0097  0CF4               	rrf	??_leer_direccion_DDRAM,f
   732  0098  3EFF               	addlw	-1
   733  0099  1D03               	skipz
   734  009A  2896               	goto	u95
   735  009B  0874               	movf	??_leer_direccion_DDRAM,w
   736  009C  390F               	andlw	15
   737  009D  0479               	iorwf	_direccion_DDRAM,w
   738  009E  00F5               	movwf	??_leer_direccion_DDRAM+1
   739  009F  0875               	movf	??_leer_direccion_DDRAM+1,w
   740  00A0  00F9               	movwf	_direccion_DDRAM
   741  00A1                     l908:
   742                           
   743                           ;LCD16x2.c: 48:     PORTBbits.RB3=0;PORTBbits.RB2=0;LCD_delay();
   744  00A1  1186               	bcf	6,3	;volatile
   745  00A2                     l910:
   746  00A2  1106               	bcf	6,2	;volatile
   747  00A3                     l912:
   748  00A3  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   749  00A8                     l914:
   750                           
   751                           ;LCD16x2.c: 49:     TRISB=0x00;
   752  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   753  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   754  00AA  0186               	clrf	6	;volatile
   755  00AB                     l916:
   756                           
   757                           ;LCD16x2.c: 50:     return(direccion_DDRAM);
   758  00AB  0879               	movf	_direccion_DDRAM,w
   759  00AC                     l71:
   760  00AC  0008               	return
   761  00AD                     __end_of_leer_direccion_DDRAM:
   762                           
   763                           	psect	text3
   764  00AD                     __ptext3:	
   765 ;; *************** function _escribir_comando *****************
   766 ;; Defined at:
   767 ;;		line 21 in file "LCD16x2.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  comando         1    wreg     unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  comando         1    5[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0
   783 ;;      Temps:          1       0       0       0       0
   784 ;;      Totals:         2       0       0       0       0
   785 ;;Total ram usage:        2 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 2
   788 ;; This function calls:
   789 ;;		_LCD_delay
   790 ;; This function is called by:
   791 ;;		_main
   792 ;;		_escribir_caracter_especial
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796  00AD                     _escribir_comando:	
   797                           ;psect for function _escribir_comando
   798                           
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in _escribir_comando: [wreg+status,2+status,0+pclath+cstack]
   802                           ;escribir_comando@comando stored from wreg
   803  00AD  00F5               	movwf	escribir_comando@comando
   804  00AE                     l826:
   805                           
   806                           ;LCD16x2.c: 22:     PORTB = (comando)&0xF0;
   807  00AE  0875               	movf	escribir_comando@comando,w
   808  00AF  39F0               	andlw	240
   809  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   810  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   811  00B2  0086               	movwf	6	;volatile
   812  00B3                     l828:
   813                           
   814                           ;LCD16x2.c: 23:     LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbits.RB3 = 0;LCD_dela
      +                          y();
   815  00B3  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   816  00B8                     l830:
   817  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   818  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   819  00BA  1586               	bsf	6,3	;volatile
   820  00BB                     l832:
   821  00BB  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   822  00C0                     l834:
   823  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   824  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   825  00C2  1186               	bcf	6,3	;volatile
   826  00C3                     l836:
   827  00C3  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   828  00C8                     l838:
   829                           
   830                           ;LCD16x2.c: 24:     PORTB = (comando<<4)&0xF0;
   831  00C8  0875               	movf	escribir_comando@comando,w
   832  00C9  00F4               	movwf	??_escribir_comando
   833  00CA  3003               	movlw	3
   834  00CB                     u75:
   835  00CB  1003               	clrc
   836  00CC  0DF4               	rlf	??_escribir_comando,f
   837  00CD  3EFF               	addlw	-1
   838  00CE  1D03               	skipz
   839  00CF  28CB               	goto	u75
   840  00D0  1003               	clrc
   841  00D1  0D74               	rlf	??_escribir_comando,w
   842  00D2  39F0               	andlw	240
   843  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   844  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   845  00D5  0086               	movwf	6	;volatile
   846  00D6                     l840:
   847                           
   848                           ;LCD16x2.c: 25:     LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbits.RB3 = 0;LCD_dela
      +                          y();
   849  00D6  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   850  00DB                     l842:
   851  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   852  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   853  00DD  1586               	bsf	6,3	;volatile
   854  00DE                     l844:
   855  00DE  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   856  00E3                     l846:
   857  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   858  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   859  00E5  1186               	bcf	6,3	;volatile
   860  00E6                     l848:
   861  00E6  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
   862  00EB                     l850:
   863                           
   864                           ;LCD16x2.c: 26:     PORTB = 0x00;
   865  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   866  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   867  00ED  0186               	clrf	6	;volatile
   868  00EE                     l59:
   869  00EE  0008               	return
   870  00EF                     __end_of_escribir_comando:
   871                           
   872                           	psect	text4
   873  0179                     __ptext4:	
   874 ;; *************** function _escribir_cadena *****************
   875 ;; Defined at:
   876 ;;		line 35 in file "LCD16x2.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  cadena          1    wreg     PTR unsigned char 
   879 ;;		 -> STR_1(9), 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  cadena          1    7[COMMON] PTR unsigned char 
   882 ;;		 -> STR_1(9), 
   883 ;;  i               1    8[COMMON] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         2       0       0       0       0
   895 ;;      Temps:          1       0       0       0       0
   896 ;;      Totals:         3       0       0       0       0
   897 ;;Total ram usage:        3 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 3
   900 ;; This function calls:
   901 ;;		_escribir_caracter
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907  0179                     _escribir_cadena:	
   908                           ;psect for function _escribir_cadena
   909                           
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _escribir_cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   913                           ;escribir_cadena@cadena stored from wreg
   914  0179  00F7               	movwf	escribir_cadena@cadena
   915  017A                     l934:
   916                           
   917                           ;LCD16x2.c: 36:     char i = 0;
   918  017A  01F8               	clrf	escribir_cadena@i
   919                           
   920                           ;LCD16x2.c: 37:     while(cadena[i]!=0) {
   921  017B  298D               	goto	l940
   922  017C                     l936:
   923                           
   924                           ;LCD16x2.c: 38:  escribir_caracter(cadena[i]);
   925  017C  0878               	movf	escribir_cadena@i,w
   926  017D  0777               	addwf	escribir_cadena@cadena,w
   927  017E  0084               	movwf	4
   928  017F  120A  118A  21AE  120A  118A  	fcall	stringdir
   929  0184  120A  118A  2022  120A  118A  	fcall	_escribir_caracter
   930  0189                     l938:
   931                           
   932                           ;LCD16x2.c: 39:  i++;
   933  0189  3001               	movlw	1
   934  018A  00F6               	movwf	??_escribir_cadena
   935  018B  0876               	movf	??_escribir_cadena,w
   936  018C  07F8               	addwf	escribir_cadena@i,f
   937  018D                     l940:
   938                           
   939                           ;LCD16x2.c: 37:     while(cadena[i]!=0) {
   940  018D  0878               	movf	escribir_cadena@i,w
   941  018E  0777               	addwf	escribir_cadena@cadena,w
   942  018F  0084               	movwf	4
   943  0190  120A  118A  21AE  120A  118A  	fcall	stringdir
   944  0195  3A00               	xorlw	0
   945  0196  1D03               	skipz
   946  0197  2999               	goto	u101
   947  0198  299A               	goto	u100
   948  0199                     u101:
   949  0199  297C               	goto	l936
   950  019A                     u100:
   951  019A                     l68:
   952  019A  0008               	return
   953  019B                     __end_of_escribir_cadena:
   954                           
   955                           	psect	text5
   956  0022                     __ptext5:	
   957 ;; *************** function _escribir_caracter *****************
   958 ;; Defined at:
   959 ;;		line 28 in file "LCD16x2.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  caracter        1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  caracter        1    5[COMMON] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0
   975 ;;      Temps:          1       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 2
   980 ;; This function calls:
   981 ;;		_LCD_delay
   982 ;; This function is called by:
   983 ;;		_main
   984 ;;		_escribir_cadena
   985 ;;		_escribir_caracter_especial
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989  0022                     _escribir_caracter:	
   990                           ;psect for function _escribir_caracter
   991                           
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _escribir_caracter: [wreg+status,2+status,0+pclath+cstack]
   995                           ;escribir_caracter@caracter stored from wreg
   996  0022  00F5               	movwf	escribir_caracter@caracter
   997  0023                     l852:
   998                           
   999                           ;LCD16x2.c: 29:     PORTB = (caracter)&0xF0;
  1000  0023  0875               	movf	escribir_caracter@caracter,w
  1001  0024  39F0               	andlw	240
  1002  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0027  0086               	movwf	6	;volatile
  1005  0028                     l854:
  1006                           
  1007                           ;LCD16x2.c: 30:     PORTBbits.RB1 = 1; LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbi
      +                          ts.RB3 = 0;LCD_delay();PORTBbits.RB1 = 0;
  1008  0028  1486               	bsf	6,1	;volatile
  1009  0029                     l856:
  1010  0029  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1011  002E                     l858:
  1012  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1013  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0030  1586               	bsf	6,3	;volatile
  1015  0031                     l860:
  1016  0031  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1017  0036                     l862:
  1018  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0038  1186               	bcf	6,3	;volatile
  1021  0039                     l864:
  1022  0039  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1023  003E                     l866:
  1024  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1025  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0040  1086               	bcf	6,1	;volatile
  1027  0041                     l868:
  1028                           
  1029                           ;LCD16x2.c: 31:     PORTB = (caracter<<4)&0xF0;
  1030  0041  0875               	movf	escribir_caracter@caracter,w
  1031  0042  00F4               	movwf	??_escribir_caracter
  1032  0043  3003               	movlw	3
  1033  0044                     u85:
  1034  0044  1003               	clrc
  1035  0045  0DF4               	rlf	??_escribir_caracter,f
  1036  0046  3EFF               	addlw	-1
  1037  0047  1D03               	skipz
  1038  0048  2844               	goto	u85
  1039  0049  1003               	clrc
  1040  004A  0D74               	rlf	??_escribir_caracter,w
  1041  004B  39F0               	andlw	240
  1042  004C  0086               	movwf	6	;volatile
  1043  004D                     l870:
  1044                           
  1045                           ;LCD16x2.c: 32:     PORTBbits.RB1 = 1;LCD_delay();PORTBbits.RB3 = 1;LCD_delay();PORTBbit
      +                          s.RB3 = 0;LCD_delay();PORTBbits.RB1 = 0;
  1046  004D  1486               	bsf	6,1	;volatile
  1047  004E                     l872:
  1048  004E  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1049  0053                     l874:
  1050  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0055  1586               	bsf	6,3	;volatile
  1053  0056                     l876:
  1054  0056  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1055  005B                     l878:
  1056  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1057  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1058  005D  1186               	bcf	6,3	;volatile
  1059  005E                     l880:
  1060  005E  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1061  0063                     l882:
  1062  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0065  1086               	bcf	6,1	;volatile
  1065  0066                     l884:
  1066                           
  1067                           ;LCD16x2.c: 33:     PORTB = 0x00;
  1068  0066  0186               	clrf	6	;volatile
  1069  0067                     l62:
  1070  0067  0008               	return
  1071  0068                     __end_of_escribir_caracter:
  1072                           
  1073                           	psect	text6
  1074  0155                     __ptext6:	
  1075 ;; *************** function _LCD_Init *****************
  1076 ;; Defined at:
  1077 ;;		line 8 in file "LCD16x2.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		_LCD_delay
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105  0155                     _LCD_Init:	
  1106                           ;psect for function _LCD_Init
  1107                           
  1108  0155                     l920:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1111                           
  1112                           
  1113                           ;LCD16x2.c: 9:     TRISBbits.TRISB1 = 0;TRISBbits.TRISB2 = 0;TRISBbits.TRISB3 = 0;
  1114  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1115  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1116  0157  1086               	bcf	6,1	;volatile
  1117  0158  1106               	bcf	6,2	;volatile
  1118  0159  1186               	bcf	6,3	;volatile
  1119                           
  1120                           ;LCD16x2.c: 10:     PORTBbits.RB1=0;PORTBbits.RB2=0;PORTBbits.RB3=0;
  1121  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1122  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1123  015C  1086               	bcf	6,1	;volatile
  1124  015D  1106               	bcf	6,2	;volatile
  1125  015E  1186               	bcf	6,3	;volatile
  1126  015F                     l922:
  1127                           
  1128                           ;LCD16x2.c: 11:     TRISB = 0x01;
  1129  015F  3001               	movlw	1
  1130  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1131  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1132  0162  0086               	movwf	6	;volatile
  1133                           
  1134                           ;LCD16x2.c: 13:     PORTB = 0b00100000;
  1135  0163  3020               	movlw	32
  1136  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0166  0086               	movwf	6	;volatile
  1139  0167                     l924:
  1140                           
  1141                           ;LCD16x2.c: 14:     LCD_delay();
  1142  0167  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1143  016C                     l926:
  1144                           
  1145                           ;LCD16x2.c: 15:     PORTBbits.RB3 = 1;
  1146  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1147  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1148  016E  1586               	bsf	6,3	;volatile
  1149  016F                     l928:
  1150                           
  1151                           ;LCD16x2.c: 16:     LCD_delay();
  1152  016F  120A  118A  21CC  120A  118A  	fcall	_LCD_delay
  1153  0174                     l930:
  1154                           
  1155                           ;LCD16x2.c: 17:     PORTBbits.RB3 = 0;
  1156  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0176  1186               	bcf	6,3	;volatile
  1159  0177                     l932:
  1160                           
  1161                           ;LCD16x2.c: 18:     PORTB = 0x00;
  1162  0177  0186               	clrf	6	;volatile
  1163  0178                     l56:
  1164  0178  0008               	return
  1165  0179                     __end_of_LCD_Init:
  1166                           
  1167                           	psect	text7
  1168  01CC                     __ptext7:	
  1169 ;; *************** function _LCD_delay *****************
  1170 ;; Defined at:
  1171 ;;		line 5 in file "LCD16x2.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0
  1187 ;;      Temps:          2       0       0       0       0
  1188 ;;      Totals:         2       0       0       0       0
  1189 ;;Total ram usage:        2 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;;		_LCD_Init
  1197 ;;		_escribir_comando
  1198 ;;		_escribir_caracter
  1199 ;;		_leer_direccion_DDRAM
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203  01CC                     _LCD_delay:	
  1204                           ;psect for function _LCD_delay
  1205                           
  1206  01CC                     l824:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _LCD_delay: [wreg]
  1209                           
  1210                           
  1211                           ;LCD16x2.c: 6:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1212  01CC  300D               	movlw	13
  1213  01CD  00F3               	movwf	??_LCD_delay+1
  1214  01CE  30FB               	movlw	251
  1215  01CF  00F2               	movwf	??_LCD_delay
  1216  01D0                     u127:
  1217  01D0  0BF2               	decfsz	??_LCD_delay,f
  1218  01D1  29D0               	goto	u127
  1219  01D2  0BF3               	decfsz	??_LCD_delay+1,f
  1220  01D3  29D0               	goto	u127
  1221  01D4  29D5               	nop2
  1222  01D5                     l53:
  1223  01D5  0008               	return
  1224  01D6                     __end_of_LCD_delay:
  1225                           
  1226                           	psect	text8
  1227  01BD                     __ptext8:	
  1228 ;; *************** function _ISR *****************
  1229 ;; Defined at:
  1230 ;;		line 27 in file "Main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		None
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          2       0       0       0       0
  1247 ;;      Totals:         2       0       0       0       0
  1248 ;;Total ram usage:        2 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		Interrupt level 1
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257  01BD                     _ISR:	
  1258                           ;psect for function _ISR
  1259                           
  1260  01BD                     i1l820:
  1261                           
  1262                           ;Main.c: 28:     if(INTCONbits.INTF == 1){
  1263  01BD  1C8B               	btfss	11,1	;volatile
  1264  01BE  29C0               	goto	u6_21
  1265  01BF  29C1               	goto	u6_20
  1266  01C0                     u6_21:
  1267  01C0  29C5               	goto	i1l36
  1268  01C1                     u6_20:
  1269  01C1                     i1l822:
  1270                           
  1271                           ;Main.c: 29:  PORTC = (~PORTC);
  1272  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1273  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1274  01C3  0987               	comf	7,f	;volatile
  1275                           
  1276                           ;Main.c: 30:  INTCONbits.INTF = 0;
  1277  01C4  108B               	bcf	11,1	;volatile
  1278  01C5                     i1l36:
  1279  01C5  0871               	movf	??_ISR+1,w
  1280  01C6  008A               	movwf	10
  1281  01C7  0E70               	swapf	??_ISR,w
  1282  01C8  0083               	movwf	3
  1283  01C9  0EFE               	swapf	btemp,f
  1284  01CA  0E7E               	swapf	btemp,w
  1285  01CB  0009               	retfie
  1286  01CC                     __end_of_ISR:
  1287  007E                     btemp	set	126	;btemp
  1288  007E                     wtemp0	set	126
  1289                           
  1290                           	psect	intentry
  1291  0004                     __pintentry:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _ISR: []
  1294                           
  1295  0004                     interrupt_function:
  1296  007E                     saved_w	set	btemp
  1297  0004  00FE               	movwf	btemp
  1298  0005  0E03               	swapf	3,w
  1299  0006  00F0               	movwf	??_ISR
  1300  0007  080A               	movf	10,w
  1301  0008  00F1               	movwf	??_ISR+1
  1302  0009  120A  118A  29BD   	ljmp	_ISR
  1303                           
  1304                           	psect	idloc
  1305                           
  1306                           ;Config register IDLOC0 @ 0x2000
  1307                           ;	unspecified, using default values
  1308  2000                     	org	8192
  1309  2000  3FFF               	dw	16383
  1310                           
  1311                           ;Config register IDLOC1 @ 0x2001
  1312                           ;	unspecified, using default values
  1313  2001                     	org	8193
  1314  2001  3FFF               	dw	16383
  1315                           
  1316                           ;Config register IDLOC2 @ 0x2002
  1317                           ;	unspecified, using default values
  1318  2002                     	org	8194
  1319  2002  3FFF               	dw	16383
  1320                           
  1321                           ;Config register IDLOC3 @ 0x2003
  1322                           ;	unspecified, using default values
  1323  2003                     	org	8195
  1324  2003  3FFF               	dw	16383
  1325                           
  1326                           	psect	config
  1327                           
  1328                           ;Config register CONFIG @ 0x2007
  1329                           ;	Oscillator Selection bits
  1330                           ;	FOSC = XT, XT oscillator
  1331                           ;	Watchdog Timer Enable bit
  1332                           ;	WDTE = OFF, WDT disabled
  1333                           ;	Power-up Timer Enable bit
  1334                           ;	PWRTE = ON, PWRT enabled
  1335                           ;	Brown-out Reset Enable bit
  1336                           ;	BOREN = ON, BOR enabled
  1337                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1338                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1339                           ;	Data EEPROM Memory Code Protection bit
  1340                           ;	CPD = OFF, Data EEPROM code protection off
  1341                           ;	Flash Program Memory Write Enable bits
  1342                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1343                           ;	In-Circuit Debugger Mode bit
  1344                           ;	DEBUG = 0x1, unprogrammed default
  1345                           ;	Flash Program Memory Code Protection bit
  1346                           ;	CP = OFF, Code protection off
  1347  2007                     	org	8199
  1348  2007  3F71               	dw	16241

Data Sizes:
    Strings     9
    Constant    0
    Data        8
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    escribir_caracter_especial@DirCGRAM	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    escribir_cadena@cadena	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_escribir_cadena
    _main->_escribir_caracter_especial
    _escribir_caracter_especial->_escribir_caracter
    _escribir_caracter_especial->_escribir_comando
    _escribir_caracter_especial->_leer_direccion_DDRAM
    _leer_direccion_DDRAM->_LCD_delay
    _escribir_comando->_LCD_delay
    _escribir_cadena->_escribir_caracter
    _escribir_caracter->_LCD_delay
    _LCD_Init->_LCD_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     483
                           _LCD_Init
                          _LCD_delay
                    _escribir_cadena
                  _escribir_caracter
         _escribir_caracter_especial
                   _escribir_comando
 ---------------------------------------------------------------------------------
 (1) _escribir_caracter_especial                           3     3      0     228
                                              6 COMMON     3     3      0
                  _escribir_caracter
                   _escribir_comando
               _leer_direccion_DDRAM
 ---------------------------------------------------------------------------------
 (2) _leer_direccion_DDRAM                                 2     2      0       0
                                              4 COMMON     2     2      0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (1) _escribir_comando                                     2     2      0      44
                                              4 COMMON     2     2      0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (1) _escribir_cadena                                      3     3      0     167
                                              6 COMMON     3     3      0
                  _escribir_caracter
 ---------------------------------------------------------------------------------
 (2) _escribir_caracter                                    2     2      0      44
                                              4 COMMON     2     2      0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (2) _LCD_delay                                            2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_delay
   _LCD_delay
   _escribir_cadena
     _escribir_caracter
       _LCD_delay
   _escribir_caracter
   _escribir_caracter_especial
     _escribir_caracter
     _escribir_comando
       _LCD_delay
     _leer_direccion_DDRAM
       _LCD_delay
   _escribir_comando

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       8       5       10.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 12 16:03:02 2022

                                 pc 0002                                  l27 0121  
                                l28 0121                                  l53 01D5  
                                l62 0067                                  l71 00AC  
                                l56 0178                                  l59 00EE  
                                l68 019A                                  l76 0154  
                                u75 00CB                                  u85 0044  
                                u95 0096                                  fsr 0004  
                               l900 0084                                 l830 00B8  
                               l910 00A2                                 l902 0089  
                               l824 01CC                                 l920 0155  
                               l840 00D6                                 l832 00BB  
                               l912 00A3                                 l904 008C  
                               l930 0174                                 l922 015F  
                               l850 00EB                                 l842 00DB  
                               l834 00C0                                 l826 00AE  
                               l914 00A8                                 l906 0091  
                               l932 0177                                 l924 0167  
                               l860 0031                                 l852 0023  
                               l940 018D                                 l844 00DE  
                               l836 00C3                                 l828 00B3  
                               l916 00AB                                 l908 00A1  
                               l926 016C                                 l870 004D  
                               l862 0036                                 l854 0028  
                               l934 017A                                 l846 00E3  
                               l838 00C8                                 l942 0126  
                               l928 016F                                 l880 005E  
                               l872 004E                                 l864 0039  
                               l856 0029                                 l936 017C  
                               l848 00E6                                 l952 0139  
                               l944 012E                                 l960 00EF  
                               l882 0063                                 l874 0053  
                               l866 003E                                 l858 002E  
                               l938 0189                                 l890 006F  
                               l954 0143                                 l946 0138  
                               l970 0119                                 l962 0105  
                               l884 0066                                 l876 0056  
                               l868 0041                                 l892 0074  
                               l956 0147                                 l972 011A  
                               l964 010B                                 l878 005B  
                               l894 0077                                 l886 0068  
                               l958 014D                                 l974 011D  
                               l966 0117                                 l896 007C  
                               l888 006C                                 l968 0118  
                               l898 0083                                 u100 019A  
                               u101 0199                                 u110 014D  
                               u111 014C                                 u127 01D0  
                               _ISR 01BD                                 fsr0 0004  
                               indf 0000                                ?_ISR 0070  
                              STR_1 01B4                                i1l36 01C5  
                              u6_20 01C1                                u6_21 01C0  
                              _main 00EF                                btemp 007E  
__end_of_escribir_caracter_especial 0155          _escribir_caracter_especial 0125  
                              start 000C                _leer_direccion_DDRAM 0068  
escribir_caracter_especial@DirCGRAM 0077                               ??_ISR 0070  
                  __end_of_LCD_Init 0179                               ?_main 0070  
                             i1l820 01BD                               i1l822 01C1  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISB 0086                               _TRISC 0087  
                             pclath 000A                               status 0003  
                             wtemp0 007E               ?_leer_direccion_DDRAM 0070  
                   __initialization 000F                        __end_of_main 0125  
          __end_of_escribir_comando 00EF                              ??_main 0079  
                 __end_of_LCD_delay 01D6                              _CGRAM1 0020  
                 ??_escribir_cadena 0076                              saved_w 007E  
           __end_of__initialization 001E                           ?_LCD_Init 0070  
            ??_leer_direccion_DDRAM 0074                      __pcstackCOMMON 0070  
                      __pidataBANK0 01D6                     _direccion_DDRAM 0079  
                        ??_LCD_Init 0074         ?_escribir_caracter_especial 0070  
                        __pmaintext 00EF                          __pintentry 0004  
                        __stringtab 01AE                   ?_escribir_comando 0070  
                ??_escribir_comando 0074                             __ptext1 0125  
                           __ptext2 0068                             __ptext3 00AD  
                           __ptext4 0179                             __ptext5 0022  
                           __ptext6 0155                             __ptext7 01CC  
                           __ptext8 01BD                           _LCD_delay 01CC  
              end_of_initialization 001E                     _escribir_cadena 0179  
                         _PORTBbits 0006                           _TRISBbits 0086  
                        ?_LCD_delay 0070               escribir_cadena@cadena 0077  
               start_initialization 000F                         __end_of_ISR 01CC  
           __end_of_escribir_cadena 019B                          init_fetch0 019B  
                       __pdataBANK0 0020                         __pbssCOMMON 0079  
                         ___latbits 0002                         ??_LCD_delay 0072  
                         __pstrings 01AE             escribir_comando@comando 0075  
       escribir_caracter_especial@i 0078                    ?_escribir_cadena 0070  
                 interrupt_function 0004                            _LCD_Init 0155  
                       __stringbase 01B3                   _escribir_caracter 0022  
                ?_escribir_caracter 0070                  __end_of__stringtab 01B4  
               ??_escribir_caracter 0074           __end_of_escribir_caracter 0068  
      ??_escribir_caracter_especial 0076        __end_of_leer_direccion_DDRAM 00AD  
                        _INTCONbits 000B                            init_ram0 019F  
                  _escribir_comando 00AD                            intlevel1 0000  
                         stringcode 01AE                    escribir_cadena@i 0078  
                          stringdir 01AE                            stringtab 01AE  
         escribir_caracter@caracter 0075  
