

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 12 15:40:15 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0008                     _PORTD	set	8
   169  000B                     _INTCONbits	set	11
   170  0088                     _TRISD	set	136
   171                           
   172                           	psect	cinit
   173  000F                     start_initialization:	
   174                           ; #config settings
   175                           
   176  000F                     __initialization:
   177  000F                     end_of_initialization:	
   178                           ;End of C runtime variable initialization code
   179                           
   180  000F                     __end_of__initialization:
   181  000F  0183               	clrf	3
   182  0010  120A  118A  2822   	ljmp	_main	;jump to C main() function
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:
   186  0070                     ?_main:
   187  0070                     ?_ISR:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ??_ISR:	
   191                           ; 1 bytes @ 0x0
   192                           
   193                           
   194                           ; 1 bytes @ 0x0
   195  0070                     	ds	2
   196  0072                     ??_main:
   197                           
   198                           	psect	maintext
   199  0022                     __pmaintext:	
   200                           ; 1 bytes @ 0x2
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 6 in file "Main.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2
   215 ;; Tracked objects:
   216 ;;		On entry : B00/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   220 ;;      Params:         0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called: 1
   226 ;; This function calls:
   227 ;;		Nothing
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233  0022                     _main:	
   234                           ;psect for function _main
   235                           
   236  0022                     l612:	
   237                           ;incstack = 0
   238                           ; Regs used in _main: [wreg+status,2]
   239                           
   240                           
   241                           ;Main.c: 8:     INTCONbits.GIE = 1;
   242  0022  178B               	bsf	11,7	;volatile
   243                           
   244                           ;Main.c: 9:     INTCONbits.INTE = 1;
   245  0023  160B               	bsf	11,4	;volatile
   246                           
   247                           ;Main.c: 10:     INTCONbits.INTF = 0;
   248  0024  108B               	bcf	11,1	;volatile
   249  0025                     l614:
   250                           
   251                           ;Main.c: 12:     TRISD = 0x00;
   252  0025  1683               	bsf	3,5	;RP0=1, select bank1
   253  0026  1303               	bcf	3,6	;RP1=0, select bank1
   254  0027  0188               	clrf	8	;volatile
   255  0028                     l616:
   256                           
   257                           ;Main.c: 13:     PORTD = 0b10101010;
   258  0028  30AA               	movlw	170
   259  0029  1283               	bcf	3,5	;RP0=0, select bank0
   260  002A  1303               	bcf	3,6	;RP1=0, select bank0
   261  002B  0088               	movwf	8	;volatile
   262  002C                     l11:	
   263                           ;Main.c: 14:     while(1);
   264                           
   265  002C                     l12:
   266  002C  282C               	goto	l11
   267  002D  120A  118A  280C   	ljmp	start
   268  0030                     __end_of_main:
   269                           
   270                           	psect	text1
   271  0013                     __ptext1:	
   272 ;; *************** function _ISR *****************
   273 ;; Defined at:
   274 ;;		line 18 in file "Main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		None
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          2       0       0       0       0
   291 ;;      Totals:         2       0       0       0       0
   292 ;;Total ram usage:        2 bytes
   293 ;; Hardware stack levels used: 1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		Interrupt level 1
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301  0013                     _ISR:	
   302                           ;psect for function _ISR
   303                           
   304  0013                     i1l618:
   305                           
   306                           ;Main.c: 19:     if(INTCONbits.INTF == 1){
   307  0013  1C8B               	btfss	11,1	;volatile
   308  0014  2816               	goto	u1_21
   309  0015  2817               	goto	u1_20
   310  0016                     u1_21:
   311  0016  281B               	goto	i1l20
   312  0017                     u1_20:
   313  0017                     i1l620:
   314                           
   315                           ;Main.c: 20:  PORTD = (~PORTD);
   316  0017  1283               	bcf	3,5	;RP0=0, select bank0
   317  0018  1303               	bcf	3,6	;RP1=0, select bank0
   318  0019  0988               	comf	8,f	;volatile
   319                           
   320                           ;Main.c: 21:  INTCONbits.INTF = 0;
   321  001A  108B               	bcf	11,1	;volatile
   322  001B                     i1l20:
   323  001B  0871               	movf	??_ISR+1,w
   324  001C  008A               	movwf	10
   325  001D  0E70               	swapf	??_ISR,w
   326  001E  0083               	movwf	3
   327  001F  0EFE               	swapf	btemp,f
   328  0020  0E7E               	swapf	btemp,w
   329  0021  0009               	retfie
   330  0022                     __end_of_ISR:
   331  007E                     btemp	set	126	;btemp
   332  007E                     wtemp0	set	126
   333                           
   334                           	psect	intentry
   335  0004                     __pintentry:	
   336                           ;incstack = 0
   337                           ; Regs used in _ISR: []
   338                           
   339  0004                     interrupt_function:
   340  007E                     saved_w	set	btemp
   341  0004  00FE               	movwf	btemp
   342  0005  0E03               	swapf	3,w
   343  0006  00F0               	movwf	??_ISR
   344  0007  080A               	movf	10,w
   345  0008  00F1               	movwf	??_ISR+1
   346  0009  120A  118A  2813   	ljmp	_ISR
   347                           
   348                           	psect	idloc
   349                           
   350                           ;Config register IDLOC0 @ 0x2000
   351                           ;	unspecified, using default values
   352  2000                     	org	8192
   353  2000  3FFF               	dw	16383
   354                           
   355                           ;Config register IDLOC1 @ 0x2001
   356                           ;	unspecified, using default values
   357  2001                     	org	8193
   358  2001  3FFF               	dw	16383
   359                           
   360                           ;Config register IDLOC2 @ 0x2002
   361                           ;	unspecified, using default values
   362  2002                     	org	8194
   363  2002  3FFF               	dw	16383
   364                           
   365                           ;Config register IDLOC3 @ 0x2003
   366                           ;	unspecified, using default values
   367  2003                     	org	8195
   368  2003  3FFF               	dw	16383
   369                           
   370                           	psect	config
   371                           
   372                           ;Config register CONFIG @ 0x2007
   373                           ;	Oscillator Selection bits
   374                           ;	FOSC = XT, XT oscillator
   375                           ;	Watchdog Timer Enable bit
   376                           ;	WDTE = OFF, WDT disabled
   377                           ;	Power-up Timer Enable bit
   378                           ;	PWRTE = ON, PWRT enabled
   379                           ;	Brown-out Reset Enable bit
   380                           ;	BOREN = ON, BOR enabled
   381                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   382                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   383                           ;	Data EEPROM Memory Code Protection bit
   384                           ;	CPD = OFF, Data EEPROM code protection off
   385                           ;	Flash Program Memory Write Enable bits
   386                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   387                           ;	In-Circuit Debugger Mode bit
   388                           ;	DEBUG = 0x1, unprogrammed default
   389                           ;	Flash Program Memory Code Protection bit
   390                           ;	CP = OFF, Code protection off
   391  2007                     	org	8199
   392  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 12 15:40:15 2022

                     l11 002C                       l12 002C                      l612 0022  
                    l614 0025                      l616 0028                      _ISR 0013  
                   ?_ISR 0070                     i1l20 001B                     u1_20 0017  
                   u1_21 0016                     _main 0022                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l620 0017                    i1l618 0013                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0030  
                 ??_main 0072                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pmaintext 0022               __pintentry 0004  
                __ptext1 0013     end_of_initialization 000F      start_initialization 000F  
            __end_of_ISR 0022                ___latbits 0002        interrupt_function 0004  
             _INTCONbits 000B                 intlevel1 0000  
