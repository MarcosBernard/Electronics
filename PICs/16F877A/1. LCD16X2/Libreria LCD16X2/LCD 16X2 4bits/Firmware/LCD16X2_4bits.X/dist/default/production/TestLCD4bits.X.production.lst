

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 02 18:45:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0008                     _PORTDbits	set	8
   237  0088                     _TRISDbits	set	136
   238                           
   239                           	psect	strings
   240  0003                     __pstrings:
   241  0003                     stringtab:
   242  0003                     __stringtab:
   243  0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246  0003                     stringdir:
   247  0003  3000               	movlw	high stringdir
   248  0004  008A               	movwf	10
   249  0005  0804               	movf	4,w
   250  0006  0A84               	incf	4,f
   251  0007  0782               	addwf	2,f
   252  0008                     __stringbase:
   253  0008  3400               	retlw	0
   254  0009                     __end_of__stringtab:
   255  0009                     STR_1:
   256  0009  3448               	retlw	72	;'H'
   257  000A  346F               	retlw	111	;'o'
   258  000B  346C               	retlw	108	;'l'
   259  000C  3461               	retlw	97	;'a'
   260  000D  3420               	retlw	32	;' '
   261  000E  346D               	retlw	109	;'m'
   262  000F  3475               	retlw	117	;'u'
   263  0010  346E               	retlw	110	;'n'
   264  0011  3464               	retlw	100	;'d'
   265  0012  346F               	retlw	111	;'o'
   266  0013  3421               	retlw	33	;'!'
   267  0014  3400               	retlw	0
   268                           
   269                           	psect	cinit
   270  07FC                     start_initialization:	
   271                           ; #config settings
   272                           
   273  07FC                     __initialization:
   274  07FC                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  07FC                     __end_of__initialization:
   278  07FC  0183               	clrf	3
   279  07FD  120A  118A  2EC6   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:
   283  0070                     ?_Init_LCD:
   284  0070                     ?_printLCD:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_exec_time1:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_exec_time1:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_exec_time2:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_exec_time2:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_clear_disp:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_return_home:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_enviar_inst_4bits:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_write_DDRAM:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316  0070                     	ds	1
   317  0071                     ??_enviar_inst_4bits:
   318                           
   319                           ; 1 bytes @ 0x1
   320  0071                     	ds	1
   321  0072                     ??_clear_disp:
   322  0072                     ??_return_home:	
   323                           ; 1 bytes @ 0x2
   324                           
   325                           
   326                           ; 1 bytes @ 0x2
   327  0072                     	ds	1
   328  0073                     enviar_inst_4bits@instruction:
   329                           
   330                           ; 1 bytes @ 0x3
   331  0073                     	ds	1
   332  0074                     enviar_inst_4bits@instruction1:
   333                           
   334                           ; 1 bytes @ 0x4
   335  0074                     	ds	1
   336  0075                     enviar_inst_4bits@instruction2:
   337                           
   338                           ; 1 bytes @ 0x5
   339  0075                     	ds	1
   340  0076                     ??_Init_LCD:
   341  0076                     ?_gotoxy:	
   342                           ; 1 bytes @ 0x6
   343                           
   344  0076                     ??_write_DDRAM:	
   345                           ; 1 bytes @ 0x6
   346                           
   347  0076                     gotoxy@x:	
   348                           ; 1 bytes @ 0x6
   349                           
   350  0076                     write_DDRAM@character:	
   351                           ; 1 bytes @ 0x6
   352                           
   353                           
   354                           ; 1 bytes @ 0x6
   355  0076                     	ds	1
   356  0077                     ??_gotoxy:
   357  0077                     ??_printLCD:	
   358                           ; 1 bytes @ 0x7
   359                           
   360  0077                     gotoxy@y:	
   361                           ; 1 bytes @ 0x7
   362                           
   363                           
   364                           ; 1 bytes @ 0x7
   365  0077                     	ds	1
   366  0078                     printLCD@cadena:
   367                           
   368                           ; 1 bytes @ 0x8
   369  0078                     	ds	1
   370  0079                     printLCD@i:
   371                           
   372                           ; 1 bytes @ 0x9
   373  0079                     	ds	1
   374  007A                     ??_main:
   375                           
   376                           ; 1 bytes @ 0xA
   377  007A                     	ds	1
   378                           
   379                           	psect	maintext
   380  06C6                     __pmaintext:	
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 5 in file "newmain.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : B00/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          1       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels required when called: 4
   406 ;; This function calls:
   407 ;;		_Init_LCD
   408 ;;		_gotoxy
   409 ;;		_printLCD
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415  06C6                     _main:	
   416                           ;psect for function _main
   417                           
   418  06C6                     l761:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;newmain.c: 7:     Init_LCD();
   424  06C6  120A  118A  271D  120A  118A  	fcall	_Init_LCD
   425                           
   426                           ;newmain.c: 8:     gotoxy(0,2);
   427  06CB  3002               	movlw	2
   428  06CC  00FA               	movwf	??_main
   429  06CD  087A               	movf	??_main,w
   430  06CE  00F6               	movwf	gotoxy@x
   431  06CF  3000               	movlw	0
   432  06D0  120A  118A  26DF  120A  118A  	fcall	_gotoxy
   433  06D5                     l763:
   434                           
   435                           ;newmain.c: 9:     printLCD("Hola mundo!");
   436  06D5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   437  06D6  120A  118A  26FB  120A  118A  	fcall	_printLCD
   438  06DB                     l11:	
   439                           ;newmain.c: 11:     while(1);
   440                           
   441  06DB                     l12:
   442  06DB  2EDB               	goto	l11
   443  06DC  120A  118A  2800   	ljmp	start
   444  06DF                     __end_of_main:
   445                           
   446                           	psect	text1
   447  06FB                     __ptext1:	
   448 ;; *************** function _printLCD *****************
   449 ;; Defined at:
   450 ;;		line 122 in file "LCD16X2_4bits.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  cadena          1    wreg     PTR unsigned char 
   453 ;;		 -> STR_1(12), 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  cadena          1    8[COMMON] PTR unsigned char 
   456 ;;		 -> STR_1(12), 
   457 ;;  i               1    9[COMMON] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         2       0       0       0       0
   469 ;;      Temps:          1       0       0       0       0
   470 ;;      Totals:         3       0       0       0       0
   471 ;;Total ram usage:        3 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; Hardware stack levels required when called: 3
   474 ;; This function calls:
   475 ;;		_write_DDRAM
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481  06FB                     _printLCD:	
   482                           ;psect for function _printLCD
   483                           
   484                           
   485                           ;incstack = 0
   486                           ; Regs used in _printLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   487                           ;printLCD@cadena stored from wreg
   488  06FB  00F8               	movwf	printLCD@cadena
   489  06FC                     l753:
   490                           
   491                           ;LCD16X2_4bits.c: 122: void printLCD(char *cadena);LCD16X2_4bits.c: 123: {;LCD16X2_4bits
      +                          .c: 124:     char i = 0;
   492  06FC  01F9               	clrf	printLCD@i
   493                           
   494                           ;LCD16X2_4bits.c: 125:     while (cadena[i] != 0)
   495  06FD  2F0F               	goto	l759
   496  06FE                     l755:
   497                           
   498                           ;LCD16X2_4bits.c: 126:     {;LCD16X2_4bits.c: 127:  write_DDRAM(cadena[i]);
   499  06FE  0879               	movf	printLCD@i,w
   500  06FF  0778               	addwf	printLCD@cadena,w
   501  0700  0084               	movwf	4
   502  0701  120A  118A  2003  120A  118A  	fcall	stringdir
   503  0706  120A  118A  2660  120A  118A  	fcall	_write_DDRAM
   504  070B                     l757:
   505                           
   506                           ;LCD16X2_4bits.c: 128:  i++;
   507  070B  3001               	movlw	1
   508  070C  00F7               	movwf	??_printLCD
   509  070D  0877               	movf	??_printLCD,w
   510  070E  07F9               	addwf	printLCD@i,f
   511  070F                     l759:
   512                           
   513                           ;LCD16X2_4bits.c: 125:     while (cadena[i] != 0)
   514  070F  0879               	movf	printLCD@i,w
   515  0710  0778               	addwf	printLCD@cadena,w
   516  0711  0084               	movwf	4
   517  0712  120A  118A  2003  120A  118A  	fcall	stringdir
   518  0717  3A00               	xorlw	0
   519  0718  1D03               	skipz
   520  0719  2F1B               	goto	u111
   521  071A  2F1C               	goto	u110
   522  071B                     u111:
   523  071B  2EFE               	goto	l755
   524  071C                     u110:
   525  071C                     l53:
   526  071C  0008               	return
   527  071D                     __end_of_printLCD:
   528                           
   529                           	psect	text2
   530  0660                     __ptext2:	
   531 ;; *************** function _write_DDRAM *****************
   532 ;; Defined at:
   533 ;;		line 115 in file "LCD16X2_4bits.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  character       1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  character       1    6[COMMON] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         1       0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 2
   554 ;; This function calls:
   555 ;;		_enviar_inst_4bits
   556 ;; This function is called by:
   557 ;;		_printLCD
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561  0660                     _write_DDRAM:	
   562                           ;psect for function _write_DDRAM
   563                           
   564                           
   565                           ;incstack = 0
   566                           ; Regs used in _write_DDRAM: [wreg+status,2+status,0+pclath+cstack]
   567                           ;write_DDRAM@character stored from wreg
   568  0660  00F6               	movwf	write_DDRAM@character
   569  0661                     l715:
   570                           
   571                           ;LCD16X2_4bits.c: 115: void write_DDRAM(char character);LCD16X2_4bits.c: 116: {;LCD16X2_
      +                          4bits.c: 117:     PORTDbits.RD7 = 1;
   572  0661  1283               	bcf	3,5	;RP0=0, select bank0
   573  0662  1303               	bcf	3,6	;RP1=0, select bank0
   574  0663  1788               	bsf	8,7	;volatile
   575  0664                     l717:
   576                           
   577                           ;LCD16X2_4bits.c: 118:     enviar_inst_4bits(character);
   578  0664  0876               	movf	write_DDRAM@character,w
   579  0665  120A  118A  2761  120A  118A  	fcall	_enviar_inst_4bits
   580  066A                     l719:
   581                           
   582                           ;LCD16X2_4bits.c: 119:     PORTDbits.RD7 = 0;
   583  066A  1283               	bcf	3,5	;RP0=0, select bank0
   584  066B  1303               	bcf	3,6	;RP1=0, select bank0
   585  066C  1388               	bcf	8,7	;volatile
   586  066D                     l47:
   587  066D  0008               	return
   588  066E                     __end_of_write_DDRAM:
   589                           
   590                           	psect	text3
   591  06DF                     __ptext3:	
   592 ;; *************** function _gotoxy *****************
   593 ;; Defined at:
   594 ;;		line 102 in file "LCD16X2_4bits.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  y               1    wreg     unsigned char 
   597 ;;  x               1    6[COMMON] unsigned char 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  y               1    7[COMMON] unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         1       0       0       0       0
   610 ;;      Locals:         1       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         2       0       0       0       0
   613 ;;Total ram usage:        2 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 2
   616 ;; This function calls:
   617 ;;		_enviar_inst_4bits
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623  06DF                     _gotoxy:	
   624                           ;psect for function _gotoxy
   625                           
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
   629                           ;gotoxy@y stored from wreg
   630  06DF  00F7               	movwf	gotoxy@y
   631  06E0                     l745:
   632                           
   633                           ;LCD16X2_4bits.c: 102: void gotoxy(unsigned char y, unsigned char x);LCD16X2_4bits.c: 10
      +                          3: {;LCD16X2_4bits.c: 105:     if (y == 0)
   634  06E0  0877               	movf	gotoxy@y,w
   635  06E1  1D03               	btfss	3,2
   636  06E2  2EE4               	goto	u91
   637  06E3  2EE5               	goto	u90
   638  06E4                     u91:
   639  06E4  2EEE               	goto	l749
   640  06E5                     u90:
   641  06E5                     l747:
   642                           
   643                           ;LCD16X2_4bits.c: 106:     {;LCD16X2_4bits.c: 107:  enviar_inst_4bits(0b10000000 | x + 0
      +                          x40);
   644  06E5  0876               	movf	gotoxy@x,w
   645  06E6  3E40               	addlw	64
   646  06E7  3880               	iorlw	128
   647  06E8  120A  118A  2761  120A  118A  	fcall	_enviar_inst_4bits
   648                           
   649                           ;LCD16X2_4bits.c: 108:     }
   650  06ED  2EFA               	goto	l44
   651  06EE                     l749:
   652  06EE  0377               	decf	gotoxy@y,w
   653  06EF  1D03               	btfss	3,2
   654  06F0  2EF2               	goto	u101
   655  06F1  2EF3               	goto	u100
   656  06F2                     u101:
   657  06F2  2EFA               	goto	l44
   658  06F3                     u100:
   659  06F3                     l751:
   660                           
   661                           ;LCD16X2_4bits.c: 110:     {;LCD16X2_4bits.c: 111:  enviar_inst_4bits(0b10000000 | x);
   662  06F3  0876               	movf	gotoxy@x,w
   663  06F4  3880               	iorlw	128
   664  06F5  120A  118A  2761  120A  118A  	fcall	_enviar_inst_4bits
   665  06FA                     l44:
   666  06FA  0008               	return
   667  06FB                     __end_of_gotoxy:
   668                           
   669                           	psect	text4
   670  071D                     __ptext4:	
   671 ;; *************** function _Init_LCD *****************
   672 ;; Defined at:
   673 ;;		line 71 in file "LCD16X2_4bits.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 2
   694 ;; This function calls:
   695 ;;		_clear_disp
   696 ;;		_enviar_inst_4bits
   697 ;;		_exec_time1
   698 ;;		_return_home
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704  071D                     _Init_LCD:	
   705                           ;psect for function _Init_LCD
   706                           
   707  071D                     l721:	
   708                           ;incstack = 0
   709                           ; Regs used in _Init_LCD: [wreg+status,2+status,0+pclath+cstack]
   710                           
   711                           
   712                           ;LCD16X2_4bits.c: 73:     TRISDbits.TRISD5 = 0;
   713  071D  1683               	bsf	3,5	;RP0=1, select bank1
   714  071E  1303               	bcf	3,6	;RP1=0, select bank1
   715  071F  1288               	bcf	8,5	;volatile
   716                           
   717                           ;LCD16X2_4bits.c: 74:     PORTDbits.RD5 = 0;
   718  0720  1283               	bcf	3,5	;RP0=0, select bank0
   719  0721  1303               	bcf	3,6	;RP1=0, select bank0
   720  0722  1288               	bcf	8,5	;volatile
   721                           
   722                           ;LCD16X2_4bits.c: 75:     TRISDbits.TRISD6 = 0;
   723  0723  1683               	bsf	3,5	;RP0=1, select bank1
   724  0724  1303               	bcf	3,6	;RP1=0, select bank1
   725  0725  1308               	bcf	8,6	;volatile
   726                           
   727                           ;LCD16X2_4bits.c: 76:     PORTDbits.RD6 = 0;
   728  0726  1283               	bcf	3,5	;RP0=0, select bank0
   729  0727  1303               	bcf	3,6	;RP1=0, select bank0
   730  0728  1308               	bcf	8,6	;volatile
   731                           
   732                           ;LCD16X2_4bits.c: 77:     TRISDbits.TRISD7 = 0;
   733  0729  1683               	bsf	3,5	;RP0=1, select bank1
   734  072A  1303               	bcf	3,6	;RP1=0, select bank1
   735  072B  1388               	bcf	8,7	;volatile
   736                           
   737                           ;LCD16X2_4bits.c: 78:     PORTDbits.RD7 = 0;
   738  072C  1283               	bcf	3,5	;RP0=0, select bank0
   739  072D  1303               	bcf	3,6	;RP1=0, select bank0
   740  072E  1388               	bcf	8,7	;volatile
   741                           
   742                           ;LCD16X2_4bits.c: 79:     TRISDbits.TRISD0 = 0;
   743  072F  1683               	bsf	3,5	;RP0=1, select bank1
   744  0730  1303               	bcf	3,6	;RP1=0, select bank1
   745  0731  1008               	bcf	8,0	;volatile
   746                           
   747                           ;LCD16X2_4bits.c: 80:     TRISDbits.TRISD1 = 0;
   748  0732  1088               	bcf	8,1	;volatile
   749                           
   750                           ;LCD16X2_4bits.c: 81:     TRISDbits.TRISD2 = 0;
   751  0733  1108               	bcf	8,2	;volatile
   752                           
   753                           ;LCD16X2_4bits.c: 82:     TRISDbits.TRISD3 = 0;
   754  0734  1188               	bcf	8,3	;volatile
   755                           
   756                           ;LCD16X2_4bits.c: 83:     PORTDbits.RD0 = 0;
   757  0735  1283               	bcf	3,5	;RP0=0, select bank0
   758  0736  1303               	bcf	3,6	;RP1=0, select bank0
   759  0737  1008               	bcf	8,0	;volatile
   760                           
   761                           ;LCD16X2_4bits.c: 84:     PORTDbits.RD1 = 0;
   762  0738  1088               	bcf	8,1	;volatile
   763                           
   764                           ;LCD16X2_4bits.c: 85:     PORTDbits.RD2 = 0;
   765  0739  1108               	bcf	8,2	;volatile
   766                           
   767                           ;LCD16X2_4bits.c: 86:     PORTDbits.RD3 = 0;
   768  073A  1188               	bcf	8,3	;volatile
   769                           
   770                           ;LCD16X2_4bits.c: 89:     PORTDbits.RD3 = 0;
   771  073B  1188               	bcf	8,3	;volatile
   772                           
   773                           ;LCD16X2_4bits.c: 90:     PORTDbits.RD2 = 0;
   774  073C  1108               	bcf	8,2	;volatile
   775                           
   776                           ;LCD16X2_4bits.c: 91:     PORTDbits.RD1 = 1;
   777  073D  1488               	bsf	8,1	;volatile
   778                           
   779                           ;LCD16X2_4bits.c: 92:     PORTDbits.RD0 = 0;
   780  073E  1008               	bcf	8,0	;volatile
   781  073F                     l723:
   782                           
   783                           ;LCD16X2_4bits.c: 93:     exec_time1();
   784  073F  120A  118A  26AD  120A  118A  	fcall	_exec_time1
   785                           
   786                           ;LCD16X2_4bits.c: 95:     clear_disp();
   787  0744  120A  118A  267F  120A  118A  	fcall	_clear_disp
   788                           
   789                           ;LCD16X2_4bits.c: 96:     return_home();
   790  0749  120A  118A  2696  120A  118A  	fcall	_return_home
   791                           
   792                           ;LCD16X2_4bits.c: 97:     enviar_inst_4bits(0b00100000 | 0b00101000 | 0b00100000);
   793  074E  3028               	movlw	40
   794  074F  120A  118A  2761  120A  118A  	fcall	_enviar_inst_4bits
   795                           
   796                           ;LCD16X2_4bits.c: 98:     enviar_inst_4bits(0b00000100 | 0b00000010 | 0b00000000);
   797  0754  3006               	movlw	6
   798  0755  120A  118A  2761  120A  118A  	fcall	_enviar_inst_4bits
   799                           
   800                           ;LCD16X2_4bits.c: 99:     enviar_inst_4bits(0b00001100 | 0b00001110 | 0b00001001);
   801  075A  300F               	movlw	15
   802  075B  120A  118A  2761  120A  118A  	fcall	_enviar_inst_4bits
   803  0760                     l38:
   804  0760  0008               	return
   805  0761                     __end_of_Init_LCD:
   806                           
   807                           	psect	text5
   808  0696                     __ptext5:	
   809 ;; *************** function _return_home *****************
   810 ;; Defined at:
   811 ;;		line 36 in file "LCD16X2_4bits.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 1
   832 ;; This function calls:
   833 ;;		_exec_time1
   834 ;; This function is called by:
   835 ;;		_Init_LCD
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839  0696                     _return_home:	
   840                           ;psect for function _return_home
   841                           
   842  0696                     l703:	
   843                           ;incstack = 0
   844                           ; Regs used in _return_home: [wreg+status,2+status,0+pclath+cstack]
   845                           
   846                           
   847                           ;LCD16X2_4bits.c: 38:     PORTDbits.RD0 = 0;
   848  0696  1283               	bcf	3,5	;RP0=0, select bank0
   849  0697  1303               	bcf	3,6	;RP1=0, select bank0
   850  0698  1008               	bcf	8,0	;volatile
   851                           
   852                           ;LCD16X2_4bits.c: 39:     PORTDbits.RD1 = 0;
   853  0699  1088               	bcf	8,1	;volatile
   854                           
   855                           ;LCD16X2_4bits.c: 40:     PORTDbits.RD2 = 0;
   856  069A  1108               	bcf	8,2	;volatile
   857                           
   858                           ;LCD16X2_4bits.c: 41:     PORTDbits.RD3 = 0;
   859  069B  1188               	bcf	8,3	;volatile
   860  069C                     l705:
   861                           
   862                           ;LCD16X2_4bits.c: 42:     exec_time1();
   863  069C  120A  118A  26AD  120A  118A  	fcall	_exec_time1
   864  06A1                     l707:
   865                           
   866                           ;LCD16X2_4bits.c: 43:     PORTDbits.RD0 = 0;
   867  06A1  1283               	bcf	3,5	;RP0=0, select bank0
   868  06A2  1303               	bcf	3,6	;RP1=0, select bank0
   869  06A3  1008               	bcf	8,0	;volatile
   870  06A4                     l709:
   871                           
   872                           ;LCD16X2_4bits.c: 44:     PORTDbits.RD1 = 1;
   873  06A4  1488               	bsf	8,1	;volatile
   874  06A5                     l711:
   875                           
   876                           ;LCD16X2_4bits.c: 45:     PORTDbits.RD2 = 0;
   877  06A5  1108               	bcf	8,2	;volatile
   878  06A6                     l713:
   879                           
   880                           ;LCD16X2_4bits.c: 46:     PORTDbits.RD3 = 0;
   881  06A6  1188               	bcf	8,3	;volatile
   882                           
   883                           ;LCD16X2_4bits.c: 47:     exec_time1();
   884  06A7  120A  118A  26AD  120A  118A  	fcall	_exec_time1
   885  06AC                     l32:
   886  06AC  0008               	return
   887  06AD                     __end_of_return_home:
   888                           
   889                           	psect	text6
   890  0761                     __ptext6:	
   891 ;; *************** function _enviar_inst_4bits *****************
   892 ;; Defined at:
   893 ;;		line 50 in file "LCD16X2_4bits.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  instruction     1    wreg     unsigned char 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  instruction     1    3[COMMON] unsigned char 
   898 ;;  instruction2    1    5[COMMON] unsigned char 
   899 ;;  instruction1    1    4[COMMON] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         3       0       0       0       0
   911 ;;      Temps:          2       0       0       0       0
   912 ;;      Totals:         5       0       0       0       0
   913 ;;Total ram usage:        5 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 1
   916 ;; This function calls:
   917 ;;		_exec_time2
   918 ;; This function is called by:
   919 ;;		_Init_LCD
   920 ;;		_gotoxy
   921 ;;		_write_DDRAM
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925  0761                     _enviar_inst_4bits:	
   926                           ;psect for function _enviar_inst_4bits
   927                           
   928                           
   929                           ;incstack = 0
   930                           ; Regs used in _enviar_inst_4bits: [wreg+status,2+status,0+pclath+cstack]
   931                           ;enviar_inst_4bits@instruction stored from wreg
   932  0761  00F3               	movwf	enviar_inst_4bits@instruction
   933  0762                     l657:
   934  0762  01F5               	clrf	enviar_inst_4bits@instruction2
   935  0763                     l659:
   936                           
   937                           ;LCD16X2_4bits.c: 53:     instruction1 = (instruction >> 4)&0x0F;
   938  0763  0873               	movf	enviar_inst_4bits@instruction,w
   939  0764  00F1               	movwf	??_enviar_inst_4bits
   940  0765  3004               	movlw	4
   941  0766                     u15:
   942  0766  1003               	clrc
   943  0767  0CF1               	rrf	??_enviar_inst_4bits,f
   944  0768  3EFF               	addlw	-1
   945  0769  1D03               	skipz
   946  076A  2F66               	goto	u15
   947  076B  0871               	movf	??_enviar_inst_4bits,w
   948  076C  390F               	andlw	15
   949  076D  00F2               	movwf	??_enviar_inst_4bits+1
   950  076E  0872               	movf	??_enviar_inst_4bits+1,w
   951  076F  00F4               	movwf	enviar_inst_4bits@instruction1
   952  0770                     l661:
   953                           
   954                           ;LCD16X2_4bits.c: 54:     instruction2 = instruction & 0x0F;
   955  0770  0873               	movf	enviar_inst_4bits@instruction,w
   956  0771  390F               	andlw	15
   957  0772  00F1               	movwf	??_enviar_inst_4bits
   958  0773  0871               	movf	??_enviar_inst_4bits,w
   959  0774  00F5               	movwf	enviar_inst_4bits@instruction2
   960  0775                     l663:
   961                           
   962                           ;LCD16X2_4bits.c: 55:     PORTDbits.RD0 = instruction1 & 0x01;
   963  0775  3001               	movlw	1
   964  0776  0574               	andwf	enviar_inst_4bits@instruction1,w
   965  0777  00F1               	movwf	??_enviar_inst_4bits
   966  0778  1283               	bcf	3,5	;RP0=0, select bank0
   967  0779  1303               	bcf	3,6	;RP1=0, select bank0
   968  077A  0808               	movf	8,w	;volatile
   969  077B  0671               	xorwf	??_enviar_inst_4bits,w
   970  077C  39FE               	andlw	-2
   971  077D  0671               	xorwf	??_enviar_inst_4bits,w
   972  077E  0088               	movwf	8	;volatile
   973  077F                     l665:
   974                           
   975                           ;LCD16X2_4bits.c: 56:     PORTDbits.RD1 = (instruction1 & 0x02) >> 1;
   976  077F  0874               	movf	enviar_inst_4bits@instruction1,w
   977  0780  00F1               	movwf	??_enviar_inst_4bits
   978  0781  1003               	clrc
   979  0782  0C71               	rrf	??_enviar_inst_4bits,w
   980  0783  3901               	andlw	1
   981  0784  00F2               	movwf	??_enviar_inst_4bits+1
   982  0785  0DF2               	rlf	??_enviar_inst_4bits+1,f
   983  0786  0808               	movf	8,w	;volatile
   984  0787  0672               	xorwf	??_enviar_inst_4bits+1,w
   985  0788  39FD               	andlw	-3
   986  0789  0672               	xorwf	??_enviar_inst_4bits+1,w
   987  078A  0088               	movwf	8	;volatile
   988  078B                     l667:
   989                           
   990                           ;LCD16X2_4bits.c: 57:     PORTDbits.RD2 = (instruction1 & 0x04) >> 2;
   991  078B  0874               	movf	enviar_inst_4bits@instruction1,w
   992  078C  00F1               	movwf	??_enviar_inst_4bits
   993  078D  3002               	movlw	2
   994  078E                     u25:
   995  078E  1003               	clrc
   996  078F  0CF1               	rrf	??_enviar_inst_4bits,f
   997  0790  3EFF               	addlw	-1
   998  0791  1D03               	skipz
   999  0792  2F8E               	goto	u25
  1000  0793  0871               	movf	??_enviar_inst_4bits,w
  1001  0794  3901               	andlw	1
  1002  0795  00F2               	movwf	??_enviar_inst_4bits+1
  1003  0796  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1004  0797  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1005  0798  0808               	movf	8,w	;volatile
  1006  0799  0672               	xorwf	??_enviar_inst_4bits+1,w
  1007  079A  39FB               	andlw	-5
  1008  079B  0672               	xorwf	??_enviar_inst_4bits+1,w
  1009  079C  0088               	movwf	8	;volatile
  1010  079D                     l669:
  1011                           
  1012                           ;LCD16X2_4bits.c: 58:     PORTDbits.RD3 = (instruction1 & 0x08) >> 3;
  1013  079D  0874               	movf	enviar_inst_4bits@instruction1,w
  1014  079E  00F1               	movwf	??_enviar_inst_4bits
  1015  079F  3003               	movlw	3
  1016  07A0                     u35:
  1017  07A0  1003               	clrc
  1018  07A1  0CF1               	rrf	??_enviar_inst_4bits,f
  1019  07A2  3EFF               	addlw	-1
  1020  07A3  1D03               	skipz
  1021  07A4  2FA0               	goto	u35
  1022  07A5  0871               	movf	??_enviar_inst_4bits,w
  1023  07A6  3901               	andlw	1
  1024  07A7  00F2               	movwf	??_enviar_inst_4bits+1
  1025  07A8  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1026  07A9  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1027  07AA  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1028  07AB  0808               	movf	8,w	;volatile
  1029  07AC  0672               	xorwf	??_enviar_inst_4bits+1,w
  1030  07AD  39F7               	andlw	-9
  1031  07AE  0672               	xorwf	??_enviar_inst_4bits+1,w
  1032  07AF  0088               	movwf	8	;volatile
  1033  07B0                     l671:
  1034                           
  1035                           ;LCD16X2_4bits.c: 59:     exec_time2();
  1036  07B0  120A  118A  266E  120A  118A  	fcall	_exec_time2
  1037  07B5                     l673:
  1038                           
  1039                           ;LCD16X2_4bits.c: 60:     PORTDbits.RD0 = instruction2 & 0x01;
  1040  07B5  3001               	movlw	1
  1041  07B6  0575               	andwf	enviar_inst_4bits@instruction2,w
  1042  07B7  00F1               	movwf	??_enviar_inst_4bits
  1043  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1044  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1045  07BA  0808               	movf	8,w	;volatile
  1046  07BB  0671               	xorwf	??_enviar_inst_4bits,w
  1047  07BC  39FE               	andlw	-2
  1048  07BD  0671               	xorwf	??_enviar_inst_4bits,w
  1049  07BE  0088               	movwf	8	;volatile
  1050  07BF                     l675:
  1051                           
  1052                           ;LCD16X2_4bits.c: 61:     PORTDbits.RD1 = (instruction2 & 0x02) >> 1;
  1053  07BF  0875               	movf	enviar_inst_4bits@instruction2,w
  1054  07C0  00F1               	movwf	??_enviar_inst_4bits
  1055  07C1  1003               	clrc
  1056  07C2  0C71               	rrf	??_enviar_inst_4bits,w
  1057  07C3  3901               	andlw	1
  1058  07C4  00F2               	movwf	??_enviar_inst_4bits+1
  1059  07C5  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1060  07C6  0808               	movf	8,w	;volatile
  1061  07C7  0672               	xorwf	??_enviar_inst_4bits+1,w
  1062  07C8  39FD               	andlw	-3
  1063  07C9  0672               	xorwf	??_enviar_inst_4bits+1,w
  1064  07CA  0088               	movwf	8	;volatile
  1065  07CB                     l677:
  1066                           
  1067                           ;LCD16X2_4bits.c: 62:     PORTDbits.RD2 = (instruction2 & 0x04) >> 2;
  1068  07CB  0875               	movf	enviar_inst_4bits@instruction2,w
  1069  07CC  00F1               	movwf	??_enviar_inst_4bits
  1070  07CD  3002               	movlw	2
  1071  07CE                     u45:
  1072  07CE  1003               	clrc
  1073  07CF  0CF1               	rrf	??_enviar_inst_4bits,f
  1074  07D0  3EFF               	addlw	-1
  1075  07D1  1D03               	skipz
  1076  07D2  2FCE               	goto	u45
  1077  07D3  0871               	movf	??_enviar_inst_4bits,w
  1078  07D4  3901               	andlw	1
  1079  07D5  00F2               	movwf	??_enviar_inst_4bits+1
  1080  07D6  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1081  07D7  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1082  07D8  0808               	movf	8,w	;volatile
  1083  07D9  0672               	xorwf	??_enviar_inst_4bits+1,w
  1084  07DA  39FB               	andlw	-5
  1085  07DB  0672               	xorwf	??_enviar_inst_4bits+1,w
  1086  07DC  0088               	movwf	8	;volatile
  1087  07DD                     l679:
  1088                           
  1089                           ;LCD16X2_4bits.c: 63:     PORTDbits.RD3 = (instruction2 & 0x08) >> 3;
  1090  07DD  0875               	movf	enviar_inst_4bits@instruction2,w
  1091  07DE  00F1               	movwf	??_enviar_inst_4bits
  1092  07DF  3003               	movlw	3
  1093  07E0                     u55:
  1094  07E0  1003               	clrc
  1095  07E1  0CF1               	rrf	??_enviar_inst_4bits,f
  1096  07E2  3EFF               	addlw	-1
  1097  07E3  1D03               	skipz
  1098  07E4  2FE0               	goto	u55
  1099  07E5  0871               	movf	??_enviar_inst_4bits,w
  1100  07E6  3901               	andlw	1
  1101  07E7  00F2               	movwf	??_enviar_inst_4bits+1
  1102  07E8  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1103  07E9  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1104  07EA  0DF2               	rlf	??_enviar_inst_4bits+1,f
  1105  07EB  0808               	movf	8,w	;volatile
  1106  07EC  0672               	xorwf	??_enviar_inst_4bits+1,w
  1107  07ED  39F7               	andlw	-9
  1108  07EE  0672               	xorwf	??_enviar_inst_4bits+1,w
  1109  07EF  0088               	movwf	8	;volatile
  1110  07F0                     l681:
  1111                           
  1112                           ;LCD16X2_4bits.c: 64:     exec_time2();
  1113  07F0  120A  118A  266E  120A  118A  	fcall	_exec_time2
  1114  07F5                     l683:
  1115                           
  1116                           ;LCD16X2_4bits.c: 65:     PORTDbits.RD0 = 0;
  1117  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1118  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1119  07F7  1008               	bcf	8,0	;volatile
  1120  07F8                     l685:
  1121                           
  1122                           ;LCD16X2_4bits.c: 66:     PORTDbits.RD1 = 0;
  1123  07F8  1088               	bcf	8,1	;volatile
  1124  07F9                     l687:
  1125                           
  1126                           ;LCD16X2_4bits.c: 67:     PORTDbits.RD2 = 0;
  1127  07F9  1108               	bcf	8,2	;volatile
  1128  07FA                     l689:
  1129                           
  1130                           ;LCD16X2_4bits.c: 68:     PORTDbits.RD3 = 0;
  1131  07FA  1188               	bcf	8,3	;volatile
  1132  07FB                     l35:
  1133  07FB  0008               	return
  1134  07FC                     __end_of_enviar_inst_4bits:
  1135                           
  1136                           	psect	text7
  1137  066E                     __ptext7:	
  1138 ;; *************** function _exec_time2 *****************
  1139 ;; Defined at:
  1140 ;;		line 13 in file "LCD16X2_4bits.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          1       0       0       0       0
  1157 ;;      Totals:         1       0       0       0       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_enviar_inst_4bits
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167  066E                     _exec_time2:	
  1168                           ;psect for function _exec_time2
  1169                           
  1170  066E                     l645:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _exec_time2: [wreg]
  1173                           
  1174                           
  1175                           ;LCD16X2_4bits.c: 16:     PORTDbits.RD5 = 1;
  1176  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1177  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0670  1688               	bsf	8,5	;volatile
  1179  0671                     l647:
  1180                           
  1181                           ;LCD16X2_4bits.c: 17:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1182  0671  3010               	movlw	16
  1183  0672  00F0               	movwf	??_exec_time2
  1184  0673                     u127:
  1185  0673  0BF0               	decfsz	??_exec_time2,f
  1186  0674  2E73               	goto	u127
  1187  0675  0000               	nop
  1188  0676                     l649:
  1189                           
  1190                           ;LCD16X2_4bits.c: 18:     PORTDbits.RD5 = 0;
  1191  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0678  1288               	bcf	8,5	;volatile
  1194                           
  1195                           ;LCD16X2_4bits.c: 19:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1196  0679  3010               	movlw	16
  1197  067A  00F0               	movwf	??_exec_time2
  1198  067B                     u137:
  1199  067B  0BF0               	decfsz	??_exec_time2,f
  1200  067C  2E7B               	goto	u137
  1201  067D  0000               	nop
  1202  067E                     l26:
  1203  067E  0008               	return
  1204  067F                     __end_of_exec_time2:
  1205                           
  1206                           	psect	text8
  1207  067F                     __ptext8:	
  1208 ;; *************** function _clear_disp *****************
  1209 ;; Defined at:
  1210 ;;		line 22 in file "LCD16X2_4bits.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0
  1227 ;;      Totals:         0       0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 1
  1231 ;; This function calls:
  1232 ;;		_exec_time1
  1233 ;; This function is called by:
  1234 ;;		_Init_LCD
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238  067F                     _clear_disp:	
  1239                           ;psect for function _clear_disp
  1240                           
  1241  067F                     l691:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _clear_disp: [wreg+status,2+status,0+pclath+cstack]
  1244                           
  1245                           
  1246                           ;LCD16X2_4bits.c: 24:     PORTDbits.RD0 = 0;
  1247  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0681  1008               	bcf	8,0	;volatile
  1250                           
  1251                           ;LCD16X2_4bits.c: 25:     PORTDbits.RD1 = 0;
  1252  0682  1088               	bcf	8,1	;volatile
  1253                           
  1254                           ;LCD16X2_4bits.c: 26:     PORTDbits.RD2 = 0;
  1255  0683  1108               	bcf	8,2	;volatile
  1256                           
  1257                           ;LCD16X2_4bits.c: 27:     PORTDbits.RD3 = 0;
  1258  0684  1188               	bcf	8,3	;volatile
  1259  0685                     l693:
  1260                           
  1261                           ;LCD16X2_4bits.c: 28:     exec_time1();
  1262  0685  120A  118A  26AD  120A  118A  	fcall	_exec_time1
  1263  068A                     l695:
  1264                           
  1265                           ;LCD16X2_4bits.c: 29:     PORTDbits.RD0 = 1;
  1266  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1267  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1268  068C  1408               	bsf	8,0	;volatile
  1269  068D                     l697:
  1270                           
  1271                           ;LCD16X2_4bits.c: 30:     PORTDbits.RD1 = 0;
  1272  068D  1088               	bcf	8,1	;volatile
  1273  068E                     l699:
  1274                           
  1275                           ;LCD16X2_4bits.c: 31:     PORTDbits.RD2 = 0;
  1276  068E  1108               	bcf	8,2	;volatile
  1277  068F                     l701:
  1278                           
  1279                           ;LCD16X2_4bits.c: 32:     PORTDbits.RD3 = 0;
  1280  068F  1188               	bcf	8,3	;volatile
  1281                           
  1282                           ;LCD16X2_4bits.c: 33:     exec_time1();
  1283  0690  120A  118A  26AD  120A  118A  	fcall	_exec_time1
  1284  0695                     l29:
  1285  0695  0008               	return
  1286  0696                     __end_of_clear_disp:
  1287                           
  1288                           	psect	text9
  1289  06AD                     __ptext9:	
  1290 ;; *************** function _exec_time1 *****************
  1291 ;; Defined at:
  1292 ;;		line 4 in file "LCD16X2_4bits.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          2       0       0       0       0
  1309 ;;      Totals:         2       0       0       0       0
  1310 ;;Total ram usage:        2 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_clear_disp
  1316 ;;		_return_home
  1317 ;;		_Init_LCD
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321  06AD                     _exec_time1:	
  1322                           ;psect for function _exec_time1
  1323                           
  1324  06AD                     l651:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _exec_time1: [wreg]
  1327                           
  1328                           
  1329                           ;LCD16X2_4bits.c: 7:     PORTDbits.RD5 = 1;
  1330  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1331  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1332  06AF  1688               	bsf	8,5	;volatile
  1333  06B0                     l653:
  1334                           
  1335                           ;LCD16X2_4bits.c: 8:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1336  06B0  3003               	movlw	3
  1337  06B1  00F1               	movwf	??_exec_time1+1
  1338  06B2  3097               	movlw	151
  1339  06B3  00F0               	movwf	??_exec_time1
  1340  06B4                     u147:
  1341  06B4  0BF0               	decfsz	??_exec_time1,f
  1342  06B5  2EB4               	goto	u147
  1343  06B6  0BF1               	decfsz	??_exec_time1+1,f
  1344  06B7  2EB4               	goto	u147
  1345  06B8  2EB9               	nop2
  1346  06B9                     l655:
  1347                           
  1348                           ;LCD16X2_4bits.c: 9:     PORTDbits.RD5 = 0;
  1349  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1350  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1351  06BB  1288               	bcf	8,5	;volatile
  1352                           
  1353                           ;LCD16X2_4bits.c: 10:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1354  06BC  3003               	movlw	3
  1355  06BD  00F1               	movwf	??_exec_time1+1
  1356  06BE  3097               	movlw	151
  1357  06BF  00F0               	movwf	??_exec_time1
  1358  06C0                     u157:
  1359  06C0  0BF0               	decfsz	??_exec_time1,f
  1360  06C1  2EC0               	goto	u157
  1361  06C2  0BF1               	decfsz	??_exec_time1+1,f
  1362  06C3  2EC0               	goto	u157
  1363  06C4  2EC5               	nop2
  1364  06C5                     l23:
  1365  06C5  0008               	return
  1366  06C6                     __end_of_exec_time1:
  1367  007E                     btemp	set	126	;btemp
  1368  007E                     wtemp0	set	126
  1369                           
  1370                           	psect	idloc
  1371                           
  1372                           ;Config register IDLOC0 @ 0x2000
  1373                           ;	unspecified, using default values
  1374  2000                     	org	8192
  1375  2000  3FFF               	dw	16383
  1376                           
  1377                           ;Config register IDLOC1 @ 0x2001
  1378                           ;	unspecified, using default values
  1379  2001                     	org	8193
  1380  2001  3FFF               	dw	16383
  1381                           
  1382                           ;Config register IDLOC2 @ 0x2002
  1383                           ;	unspecified, using default values
  1384  2002                     	org	8194
  1385  2002  3FFF               	dw	16383
  1386                           
  1387                           ;Config register IDLOC3 @ 0x2003
  1388                           ;	unspecified, using default values
  1389  2003                     	org	8195
  1390  2003  3FFF               	dw	16383
  1391                           
  1392                           	psect	config
  1393                           
  1394                           ;Config register CONFIG @ 0x2007
  1395                           ;	Oscillator Selection bits
  1396                           ;	FOSC = XT, XT oscillator
  1397                           ;	Watchdog Timer Enable bit
  1398                           ;	WDTE = OFF, WDT disabled
  1399                           ;	Power-up Timer Enable bit
  1400                           ;	PWRTE = ON, PWRT enabled
  1401                           ;	Brown-out Reset Enable bit
  1402                           ;	BOREN = ON, BOR enabled
  1403                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1404                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1405                           ;	Data EEPROM Memory Code Protection bit
  1406                           ;	CPD = OFF, Data EEPROM code protection off
  1407                           ;	Flash Program Memory Write Enable bits
  1408                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1409                           ;	In-Circuit Debugger Mode bit
  1410                           ;	DEBUG = 0x1, unprogrammed default
  1411                           ;	Flash Program Memory Code Protection bit
  1412                           ;	CP = OFF, Code protection off
  1413  2007                     	org	8199
  1414  2007  3F71               	dw	16241

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printLCD@cadena	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_printLCD
    _printLCD->_write_DDRAM
    _write_DDRAM->_enviar_inst_4bits
    _gotoxy->_enviar_inst_4bits
    _Init_LCD->_enviar_inst_4bits
    _return_home->_exec_time1
    _enviar_inst_4bits->_exec_time2
    _clear_disp->_exec_time1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     752
                                             10 COMMON     1     1      0
                           _Init_LCD
                             _gotoxy
                           _printLCD
 ---------------------------------------------------------------------------------
 (1) _printLCD                                             3     3      0     288
                                              7 COMMON     3     3      0
                        _write_DDRAM
 ---------------------------------------------------------------------------------
 (2) _write_DDRAM                                          1     1      0     165
                                              6 COMMON     1     1      0
                  _enviar_inst_4bits
 ---------------------------------------------------------------------------------
 (1) _gotoxy                                               2     1      1     314
                                              6 COMMON     2     1      1
                  _enviar_inst_4bits
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             0     0      0     150
                         _clear_disp
                  _enviar_inst_4bits
                         _exec_time1
                        _return_home
 ---------------------------------------------------------------------------------
 (2) _return_home                                          0     0      0       0
                         _exec_time1
 ---------------------------------------------------------------------------------
 (3) _enviar_inst_4bits                                    5     5      0     150
                                              1 COMMON     5     5      0
                         _exec_time2
 ---------------------------------------------------------------------------------
 (4) _exec_time2                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _clear_disp                                           0     0      0       0
                         _exec_time1
 ---------------------------------------------------------------------------------
 (3) _exec_time1                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_LCD
     _clear_disp
       _exec_time1
     _enviar_inst_4bits
       _exec_time2
     _exec_time1
     _return_home
       _exec_time1
   _gotoxy
     _enviar_inst_4bits
   _printLCD
     _write_DDRAM
       _enviar_inst_4bits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 02 18:45:51 2022

                            pc 0002                             l11 06DB                             l12 06DB  
                           l23 06C5                             l32 06AC                             l26 067E  
                           l35 07FB                             l44 06FA                             l29 0695  
                           l53 071C                             l38 0760                             l47 066D  
                           u15 0766                             u25 078E                             u35 07A0  
                           u45 07CE                             u55 07E0                             u90 06E5  
                           u91 06E4                             fsr 0004                            l701 068F  
                          l711 06A5                            l703 0696                            l713 06A6  
                          l705 069C                            l721 071D                            l651 06AD  
                          l707 06A1                            l723 073F                            l715 0661  
                          l653 06B0                            l645 066E                            l661 0770  
                          l709 06A4                            l717 0664                            l655 06B9  
                          l647 0671                            l671 07B0                            l663 0775  
                          l751 06F3                            l719 066A                            l649 0676  
                          l681 07F0                            l673 07B5                            l665 077F  
                          l657 0762                            l745 06E0                            l753 06FC  
                          l761 06C6                            l691 067F                            l683 07F5  
                          l675 07BF                            l667 078B                            l659 0763  
                          l747 06E5                            l755 06FE                            l763 06D5  
                          l693 0685                            l685 07F8                            l677 07CB  
                          l669 079D                            l749 06EE                            l757 070B  
                          l695 068A                            l687 07F9                            l679 07DD  
                          l759 070F                            l697 068D                            l689 07FA  
                          l699 068E                            u100 06F3                            u101 06F2  
                          u110 071C                            u111 071B                            u127 0673  
                          u137 067B                            u147 06B4                            u157 06C0  
                          fsr0 0004                           STR_1 0009                           _main 06C6  
                         btemp 007E                           start 0000           write_DDRAM@character 0076  
                  _write_DDRAM 0660                          ?_main 0070                          pclath 000A  
                        status 0003                          wtemp0 007E                __initialization 07FC  
                 __end_of_main 06DF               __end_of_Init_LCD 0761                         ??_main 007A  
                       _gotoxy 06DF               __end_of_printLCD 071D                   ?_return_home 0070  
      __end_of__initialization 07FC                 __pcstackCOMMON 0070                      ?_Init_LCD 0070  
                   _clear_disp 067F                     __pmaintext 06C6                   ?_write_DDRAM 0070  
                      ?_gotoxy 0076                     __stringtab 0003                     ??_Init_LCD 0076  
                   _exec_time1 06AD                     _exec_time2 066E                      ?_printLCD 0070  
                      __ptext1 06FB                        __ptext2 0660                        __ptext3 06DF  
                      __ptext4 071D                        __ptext5 0696                        __ptext6 0761  
                      __ptext7 066E                        __ptext8 067F                        __ptext9 06AD  
         end_of_initialization 07FC                        gotoxy@x 0076                        gotoxy@y 0077  
                  ?_clear_disp 0070                     ??_printLCD 0077   enviar_inst_4bits@instruction 0073  
                    _PORTDbits 0008                      _TRISDbits 0088                    ?_exec_time1 0070  
                  ?_exec_time2 0070                 __end_of_gotoxy 06FB            start_initialization 07FC  
                     ??_gotoxy 0077                      ___latbits 0002                      __pstrings 0003  
                 ??_clear_disp 0072                    __stringbase 0008                  ??_return_home 0072  
           __end_of_clear_disp 0696                       _Init_LCD 071D                   ??_exec_time1 0070  
                 ??_exec_time2 0070                 printLCD@cadena 0078             __end_of__stringtab 0009  
           __end_of_exec_time1 06C6             __end_of_exec_time2 067F            __end_of_return_home 06AD  
                    printLCD@i 0079                       _printLCD 06FB              _enviar_inst_4bits 0761  
                ??_write_DDRAM 0076             ?_enviar_inst_4bits 0070            ??_enviar_inst_4bits 0071  
    __end_of_enviar_inst_4bits 07FC                      stringcode 0003  enviar_inst_4bits@instruction1 0074  
enviar_inst_4bits@instruction2 0075            __end_of_write_DDRAM 066E                       stringdir 0003  
                     stringtab 0003                    _return_home 0696  
